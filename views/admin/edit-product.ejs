<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Edit Product</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">
    <style>
       
        .thumbnails-container {
            display: flex;
            overflow-x: auto;
        }
        .thumbnail {
            margin-right: 10px;
            position: relative;
        }
        .remove-btn {
            position: absolute;
            top: 5px;
            right: 5px;
            background-color: red;
            color: white;
            border: none;
            cursor: pointer;
        }
        body {
    font-family: 'Arial', sans-serif;
    background-color: #f4f5f7;
    color: #121111;
    padding: 20px;
    margin: 0;
    margin-top: 20px;
}

.content-main {
    background-color:#ddd;
    border-radius: 8px;
    padding: 20px;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    color:black;
    margin-top: 50px;
    
}


.content-title {
    font-size: 32px;
    font-weight: bold;
    color: #333;
    margin-bottom: 10px;
    margin-top:50px;
    margin-left: 50px;
    
}


form {
    display: flex;
    flex-direction: column;
}

.mb-4 {
    margin-bottom: 20px;
}

.form-label {
    font-size: 14px;
    font-weight: 600;
    color: #555;
}

.form-control {
    padding: 12px;
    background-color: #ddd;
    border-radius: 6px;
    border: 1px solid #ddd;
    font-size: 14px;
    color: #333;
    width: 100%;
    margin-left: 10px;
    margin-right: 10px;
}

.form-control:focus {
    border-color: #218838;
    box-shadow: 0 0 5px rgba(129, 196, 8, 0.5);
}


.error-message {
    color: #dc3545;
    font-size: 12px;
    margin-top: 5px;
}


button[type="submit"] {
    background-color: #218838;
    color: white;
    padding: 12px 20px;
    border: none;
    border-radius: 6px;
    cursor: pointer;
    font-size: 16px;
    margin-top: 20px;
    transition: background-color 0.3s;
}

button[type="submit"]:hover {
    background-color:#218838;
}


.select-dropdown {
    padding: 12px;
    
    border-radius: 6px;
    border: 1px solid #ddd;
    font-size: 14px;
    background-color: #fff;
}


.form-check-input {
    margin-right: 10px;
}

.form-check-label {
    font-size: 14px;
    color: #555;
}


#upload {
    padding: 10px;
    border-radius: 6px;
    background-color: #fff;
    border: 1px solid #ddd;
    margin-bottom: 20px;
}

#cropperContainers {
    margin-top: 10px;
    width:250px;
}

 #cropperContainer{
    display: none;
    margin-top: 20px;
} 

#saveButton {
    margin-top: 10px;
    background-color:#218838;
    color: white;
    padding: 8px 15px;
    border: none;
    border-radius: 5px;
    cursor: pointer;
}

#saveButton:hover {
    background-color:#218838;
}


.row {
    display: flex;
    flex-wrap: wrap;
    gap: 20px;
}

.col-lg-4 {
    flex: 1;
    min-width: 250px;
}


.thumbnails-container {
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
}

.thumbnail {
    width: 100px;
    height: 100px;
    object-fit: cover;
    border-radius: 8px;
}


.card {
    background-color: #fff;
    border-radius: 8px;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
}

.card-body {
    padding: 20px;
}
    </style>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css" integrity="sha512-Evv84Mr4kqVGRNSgIGL/F/aIDqQb7xQ2vcrdIwxfjThSH8CSR7PBEakCr51Ck+w+/U6swU2Im1vVX0SVk9ABhg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <script src="https://upload-widget.cloudinary.com/global/all.js"></script>

 <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">
    
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script src="https://upload-widget.cloudinary.com/global/all.js"></script>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    
    
</head>
<body>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet"> 
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://upload-widget.cloudinary.com/global/all.js"></script>

<%- include("../../views/partials/admin/header") %>

<section class="content-main  bg-white">
    <div class="row" >
        <div class="col-9">
            <div class="content-header ">
                <h2  class="card-title text-center text-dark">Edit Product</h2>
            </div>
        </div>

        <div class="col-lg-12">
                <div class="card mb-8">
                    <div class="card-body">
                    
                    <form  id="myform" name="form">
                        
                        <input type="hidden" name="productId" id="productId"value="<%= product._id %>">
                        <div class="row">
                        <div class="mb-8">
                            <label for="product_name" class="form-label ">Product Name</label>
                            <input type="text" name="productName" class="form-control border bg-white text-dark" id="product_name" value="<%= product.productName %>">
                            <div id="productNameError" class="error-message"></div>
                        </div>

                        </div>
                        
                        <div class="row">
                        <div class="mb-8">
                            <label class="form-label ">Full description</label>
                            <textarea name="descriptionData" class="form-control border bg-white text-dark" rows="10" id="descriptionid"><%= product.description %></textarea>
                            <div id="descriptionError" class="error-message"></div>
                        </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-4">
                                <label class="form-label ">Regular price ( / kg)</label>
                                <input type="text" name="regularPrice" class="form-control border bg-white text-dark" value="<%= product.price %>">
                                <div id="regularPriceError" class="error-message"></div>
                            </div>
                            <div class="col-lg-4">
                                <label class="form-label ">Sale Price ( / kg)</label>
                                <input type="text" name="salePrice" class="form-control border bg-white text-dark" value="<%= product.salesPrice %>">
                                <div id="salePriceError" class="error-message"></div>
                            </div>
                            <div class="col-lg-4">
                                <label class="form-label ">Stock</label>
                                <input type="text" name="stock" class="form-control border bg-white text-dark" value="<%= product.stock %>">
                                <div id="stockError" class="error-message"></div>
                            </div>
                            <div class="col-lg-4">
                                <label class="form-label">Color</label>
                                <input type="text" name="color" class="form-control border bg-white text-dark" value="<%= product.color %>">
                                <div id="colorError" class="error-message"></div>
                            </div>
                        </div>

                      
                       <br>
                        <div class="row">
                            <div class="col-lg-2">
                              <div class="mb-4">
                                <label class="form-label ">Item</label>

                              </div>
                            </div>
                            <div class="col-lg-4">
                              <div class="mb-4">
                                <input class="form-check-input text-dark" type="radio" name="item" id="item1" value="Fruit" <%= product.item === 'Fruit' ? 'checked' : '' %>>
                                <label class="form-check-label " for="item1">
                                  Fruit
                                </label>
                              </div>
                            </div>
                            <div class="col-lg-4">
                              <div class="mb-4">
                                <input class="form-check-input text-dark" type="radio" name="item" id="item2" value="Vegetable" <%= product.item === 'vegetable' ? 'checked' : '' %>>
                                <label class="form-check-label " for="item2">
                                  Vegetable
                                </label>
                              </div>
                            </div>
                          </div>
                          
                          <div class="row">

                        <div class="mb-4">
                            <label class="form-label text-dark">Category</label>
                            <select name="category" class="form-select border">
                                <% category.forEach(cat => { %>
                                    <option value="<%= cat._id %>" <%= cat._id.equals(product.category) ? 'selected' : '' %> > 
                                        <%= cat.name %></option>
                                <% }) %>
                            </select>
                        </div>
                          </div>
                          <div class="row">
                        <div class="mb-4">
                            <label class="form-label text-dark">Status</label>
                            <select name="Available" class="form-select border">
                                <option value="Available" <%= product.status === 'Available' ? 'selected' : '' %>>Available</option>
                                <option value="Out of Stock" <%= product.status === 'Out of Stock' ? 'selected' : '' %>>Out of Stock</option>
                                <option value="Removed" <%= product.status === 'Removed' ? 'selected' : '' %>>Removed</option>
                            </select>
                            <div id="statusError" class="error-message"></div>
                        </div>
                          </div>
                        <!-- Existing Images -->
                        <div class="mb-4">
                            <label class="form-label text-dark">Existing Images</label>
                            <div class="thumbnails-container" id="existingImages">
                                <% if (product && product.productImage && product.productImage.length > 0) { %>
                                    <% product.productImage.forEach((image, index) => { %>
                                       <div class="thumbnail"> 
                                        <img style="width: 100px;height: 100px; "src="<%= image %>" alt="Product Image <%= index + 1 %>">
                                        <button type="button" id="removeButton" class="remove-btn" onclick="deleteSingleImage('<%= image %>', '<%= product._id %>')">❌</button>
                                      
                                       </div> 
                                     

                                    <% }); %>
                                  <% } else { %>
                                    <p>No images found for this product.</p>
                                  <% } %>
                              
                            </div>
                        </div>

                        <!-- image new code -->
                        <div class="mb-4">
                            <label class="form-label text-dark">Choose Images</label>
                            <input type="file" name="images" id="upload" multiple onchange="handleImage(event)" />

                            <div id="cropperContainers"></div> 
                                                 
                          
                            <div id="cropperContainer1" class="crop-container" style="display: none;">
                                <img id="cropImage1" alt="Image to crop">
                                <button type="button" id="saveButton1" class="btn btn-primary mt-2">Save Cropped Image</button>
                            </div>
                            <div id="imageError" class="error-message"></div>
                        </div>
                        <!-- image new code -->

                        <div>
                            <button class="btn btn-md btn-primary" type="submit">Update Product</button>
                        </div>
                    </form>
                </div>
                </div>
            </div>
        </div>
    </div>
</section>
        



<script>
    const cloudName = "dwwxgavec"; 
const uploadPreset = "my_images"; 

let croppers = {};  
let croppedImages = [];  
let existingImagesArray = [];
document.querySelectorAll("#existingImages img").forEach(img => {
  existingImagesArray.push(img.src);
});
    const handleImage = (e) => {
    const files = e.target.files;  
    

    
    const cropperContainers = document.getElementById("cropperContainers");
    cropperContainers.innerHTML = "";
    
    
     for (let i = 0; i < files.length; i++) {
        const file = files[i];
        
        const reader = new FileReader();

        
        const cropperContainer = document.createElement('div');

        cropperContainer.id = `cropperContainer${i}`;

        cropperContainer.style.marginBottom = "20px"; 
        cropperContainers.appendChild(cropperContainer);
        
        
        const img = document.createElement('img');
        img.id = `cropImage${i}`;
        
        img.style.width = '300px';
        img.style.height = '200px';
        cropperContainer.appendChild(img);

        const saveButton = document.createElement('button');
        saveButton.textContent = 'Save Cropped Image';
        saveButton.id = `saveButton${i}`;
        saveButton.setAttribute("type", "button");
        cropperContainer.appendChild(saveButton);

        
         reader.onload = function () {
            img.src = reader.result;

             
                if (croppers[i]) {
                croppers[i].destroy(); 
              }

                croppers[i] = new Cropper(img, {
                aspectRatio: 1, 
                viewMode: 1,
                autoCropArea: 1,
             });

              
                saveButton.onclick = function () {
                const croppedCanvas = croppers[i].getCroppedCanvas({
                    width: 600,  
                    height: 600
                });

               
                croppedCanvas.toBlob(function (blob) {
                    const url = URL.createObjectURL(blob);

                    
                    img.src = url; 

                    img.dataset.blob = blob;  

                    
                    croppedImages.push(blob);
                    

                    
                    const croppedImagePreview = document.createElement('img');
                    croppedImagePreview.src = url;
                    croppedImagePreview.style.width = '200px';
                    croppedImagePreview.style.height = '200px';
                    cropperContainer.appendChild(croppedImagePreview);

                    
                    cropperContainer.innerHTML = '';  
                    cropperContainer.appendChild(croppedImagePreview); 

                    
                    const reCropButton = document.createElement('button');
                    reCropButton.textContent = 'Re-Crop This Image';
                    reCropButton.setAttribute("type", "button");
                    cropperContainer.appendChild(reCropButton);

                    
                    reCropButton.onclick = function () {
                        
                        img.src = url; 

                       
                        croppers[i].destroy();

                        
                        croppers[i] = new Cropper(img, {
                            aspectRatio: 1, 
                            viewMode: 1,
                            autoCropArea: 1,
                        });

                       
                        cropperContainer.innerHTML = '';  
                        cropperContainer.appendChild(img);  
                        cropperContainer.appendChild(saveButton);  
                    };
                }, 'image/jpeg', 0.7);  
            };
        };

        reader.readAsDataURL(file);
    }
};






const uploadImageToCloudinary = (blob) => {
    const formData = new FormData();
    formData.append("file", blob); 
    formData.append("upload_preset", uploadPreset);

    return fetch(`https://api.cloudinary.com/v1_1/${cloudName}/image/upload`, {
        method: "POST",
        body: formData,
    })
        .then((response) => response.json())
        .then((data) => {
            const imageUrl = data.secure_url;
            
            return imageUrl;
        })
        .catch((error) => {
            
            return null;
        });
};
document.addEventListener("DOMContentLoaded", function () {
document.getElementById('myform').onsubmit = async function (event) {
    event.preventDefault();
    
    // Get form data
    const productName = document.getElementById('product_name').value.trim();
   
    const productid = document.getElementById('productId').value.trim();
    
    const description = document.getElementById('descriptionid').value.trim();
    
    const regularPrice = document.querySelector('[name="regularPrice"]').value.trim();
    
    const salePrice = document.querySelector('[name="salePrice"]').value.trim();

    const stock = document.querySelector('[name="stock"]').value.trim();
   
    const color = document.querySelector('[name="color"]').value.trim();
 
    const Status = document.querySelector('[name="Available"]').value;

    const category = document.querySelector('[name="category"]').value;

    const item= document.querySelector('[name="item"]').value;
   
    const radios = document.getElementsByName('item');
  
   let selectedValue;
   for (const radio of radios) { 
    if (radio.checked) {
         selectedValue = radio.value;
          break; } }
    

         if(productName.length<3)
         {
            document.getElementById("productNameError").innerText="enter a valid name";
          
         return}
         if(description.length<6)

        {
            document.getElementById("desriptionError").innerText="enter a valid description";
           
         return}
        if(Status=='Available' && stock<1)
        {
       document.getElementById('stockError').innerText="If no stock please select status 'Out of stock' "
       
        return
        }
        if(Status=='Out of Stock' && stock>0)
        {
            document.getElementById('stockError').innerText="If 'Out of stock',please set stock to 0 "
         
          
        return
        }
        if(stock <0){
            document.getElementById('stockError').innerText="negative values not allowed"
         
          return
        }
        if(salePrice<=0){
        
          document.getElementById('salePriceEror').innerText="Enter a valid price"
          return
        }
       
        if(regularPrice<=0){
            document.getElementById('regularPriceError').innerText="Enter a valid price"
         
          return
        }
       
      if(parseInt(salePrice)>parseInt(regularPrice))
      {
         document.getElementById('regularPriceError').innerText="regular price must be greater than saleprice"
         return
      }
    
      
     let data = {
        productName: productName,
        description: description,
        price: regularPrice,
        salesPrice: salePrice,
        stock: stock,
        color: color,
        category: category,
        item:selectedValue,
    };
    
  
   


    
    const imageUrls = [];
    for (let i = 0; i < croppedImages.length; i++) {
        const imageUrl = await uploadImageToCloudinary(croppedImages[i]);
        if (imageUrl) {
            imageUrls.push(imageUrl);
        }
       
    }
    const mergedImages = existingImagesArray.concat(imageUrls);
   
    data.images = mergedImages;
    if(mergedImages.length==0){
        document.getElementById('imageError').innerText="please select images"
      
        return
    }

   
    axios.post(`/admin/editProduct/${productid}`, data, {
    headers: {
        'Content-Type': 'application/json'
    }
})
.then(response => {
    Swal.fire({
        icon: 'success',  
        title: 'Success',
        text: 'Product edited successfully',
        timer:2000
    });

    
    window.location.href = '/admin/products';
})
.catch(error => {
    Swal.fire({
        icon: 'error',
        title: 'Error',
        text: error?.response?.data?.message || error?.message || "Error editing product"
    });
});


    }
});
    
function deleteSingleImage(imageId, productId) {
    const status = window.confirm('Are you sure you want to delete this image?')
    if(!status){
        return true;
    }
    
    $.ajax({
        url: "/admin/deleteImage",
        method: 'delete',
        data: {
            imageNameToServer: imageId,
            productIdToServer: productId
        },
        success: function (response) {
            if (response.success === true) {
                existingImagesArray = existingImagesArray.filter(url => url !== imageId);
                window.location.reload();
            }
        },
        error: function (err) {
            console.error("Error deleting image:", err);
        }
    });
}
</script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.21.0/jquery.validate.min.js" integrity="sha512-KFHXdr2oObHKI9w4Hv1XPKc898mE4kgYx58oqsc/JqqdLMDI4YjOLzom+EMlW8HFUd0QfjfAvxSL6sEq/a42fQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
</script>
<%- include("../../views/partials/admin/footer") %>

</body>
</html>