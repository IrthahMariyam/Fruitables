<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>View Coupons</title>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
 
    <link rel="stylesheet" href="/assets/vendors/mdi/css/materialdesignicons.min.css">
   
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet"> 
    <link rel="stylesheet" href="/assets/css/style.css">
    <!-- End layout styles -->
  
    <style>
      body {
        font-family: "Arial", sans-serif;
        background-color:#000000;
        padding-top: 30px;
        padding-left:  0px;
        color: #333;
      }
.sidebar{
  padding:0px;
  margin-left: 0px;
}

.table {
  width: 100%;
  margin-top: 20px;
  border-collapse: separate; /* Ensures border radius works 
  border-spacing: 0; /* Removes gaps between table cells */
  overflow: hidden; /* Ensures rounded corners */
  border-radius: 8px; /* Adjust this value for more/less rounding */
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1); /* Optional: Add shadow for better appearance */
}

.table th, .table td {
  padding: 10px;
  text-align: left;
  border: 1px solid #ddd;
}

.table th {
  background-color: #81C408;
  color: white;
}     
.content-main {
        margin-top: 50px;
        margin-left: 15px;
        background-color: #191C24;
        border-radius: 8px;
        padding: 20px;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        width:100%
      }

      .content-header {
        display: flex;
        justify-content:center;
        align-items: center;
        margin-bottom: 20px;
      }

      .content-header h2 {
        font-weight: bold;
        color: #333;
        align-items: center; 
      }

      .table {
        margin-top: 20px;
      }

      .modal-title {
        font-weight: bold;
      }

      .btn-primary {
        background-color: #81c408;
        border: none;
      }

      .btn-primary:hover {
        background-color: #68a007;
      }

      .btn-danger {
        background-color: #dc3545;
      }

      .btn-danger:hover {
        background-color: #b22a37;
      }
    </style>
    
  </head>
 
  <body>
    
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">

    <div class="container-scroller">
      <!-- partial:partials/_sidebar.html -->
      <nav class="sidebar sidebar-offcanvas" id="sidebar">
        <div class="sidebar-brand-wrapper d-none d-lg-flex align-items-center justify-content-center fixed-top">
          <a class="sidebar-brand brand-logo text-white" href="dashboard">FRUITABLES</a>
          <a class="sidebar-brand brand-logo-mini" href="dashboard"><img src="/assets/images/logo-mini.svg" alt="logo" /></a>
        </div>
        <ul class="nav">
          <li class="nav-item profile">
            <div class="profile-desc">
              <div class="profile-pic">
                <div class="count-indicator">
                  <img class="img-xs rounded-circle " src="/assets/images/faces/face15.jpg" alt="">
                  <span class="count bg-success"></span>
                </div>
                <div class="profile-name">
                  <h5 class="mb-0 font-weight-normal">Admin</h5>
                  
                </div>
              </div>

                        </div>
          </li>
          <li class="nav-item nav-category">
            <span class="nav-link">Navigation</span>
          </li>

          <li class="nav-item menu-items">
            <a href="/admin/dashboard" class="nav-link">
              <span class="menu-icon">
                <i class="mdi mdi-speedometer"></i>
              </span>
              <span class="menu-title">Dashboard</span>
            </a>
          </li>
          <li class="nav-item menu-items">
            <a href="/admin/loadSalesPage" class="nav-link">
              <span class="menu-icon">
                <i class="mdi mdi-speedometer"></i>
              </span>
              <span class="menu-title">Reports</span>
            </a>
          </li>
          <li class="nav-item menu-items">
            <a href="/admin/user" class="nav-link">
              <span class="menu-icon">
                <i class="fas fa-users"></i>
              </span>
              <span class="menu-title">Users</span>
            </a>
            
           
          </li>
          <li class="nav-item menu-items">
            <a href="/admin/products" class="nav-link" >
              <span class="menu-icon">
                <i class="fas fa-box"></i>
              </span>
              <span class="menu-title">products</span>
            </a>
          </li>
          <li class="nav-item menu-items">
            <a href="/admin/category" class="nav-link">
              <span class="menu-icon">
                <i class="fas fa-tags"></i>
              </span>
              <span class="menu-title">Category</span>
            </a>
          </li>
          <li class="nav-item menu-items">
            <a class="nav-link" href="/admin/orders">
              <span class="menu-icon">
                <i class="fas fa-shopping-cart"></i>
              </span>
              <span class="menu-title">Order</span>
            </a>
          </li>
          <li class="nav-item menu-items">
            <a class="nav-link" href="/admin/inventory">
              <span class="menu-icon">
                <i class="fas fa-warehouse"></i>
              </span>
              <span class="menu-title">Inventory</span>
            </a>
          </li>
          <li class="nav-item menu-items">
            <a class="nav-link" href="/admin/coupon" >
              <span class="menu-icon">
                <i class="fas fa-ticket-alt"></i>
              </span>
              <span class="menu-title">Coupons</span>
            </a>
          </li>
          <li class="nav-item menu-items">
            <a class="nav-link" data-toggle="collapse" href="/admin/offer" aria-expanded="false" aria-controls="auth">
              <span class="menu-icon">
                <i class="fas fa-gift"></i> 
              </span>
              <span class="menu-title">Offer</span>
             
            </a>
           
          </li>
          <li class="nav-item menu-items">
            <a class="nav-link" data-toggle="collapse" href="/admin/logout" aria-expanded="false" aria-controls="auth">
              <span class="menu-icon">
                <i class="fas fa-sign-out-alt"></i>
              </span>
              <span class="menu-title">Logout</span>
             
            </a>
           
          </li>
        </ul>
      </nav>
      <!-- partial -->
      <div class="container-fluid page-body-wrapper">
        <!-- partial:partials/_navbar.html -->
        <nav class="navbar p-0 fixed-top d-flex flex-row">
          <div class="navbar-brand-wrapper d-flex d-lg-none align-items-center justify-content-center">
            <a class="navbar-brand brand-logo-mini" href=""><img src="/assets/images/logo-mini.svg" alt="logo" /></a>
          </div>
          <div class="navbar-menu-wrapper flex-grow d-flex align-items-stretch">
            <button class="navbar-toggler navbar-toggler align-self-center" type="button" data-toggle="minimize">
              <span class="mdi mdi-menu"></span>
            </button>
          
            <ul class="navbar-nav navbar-nav-right">
              <li class="nav-item dropdown d-none d-lg-block">
               

              <li class="nav-item dropdown">
                <a class="nav-link" id="profileDropdown" href="#" data-toggle="dropdown">
                  <div class="navbar-profile">
                    <img class="img-xs rounded-circle" src="/assets/images/faces/face15.jpg" alt="">
                    <p class="mb-0 d-none d-sm-block navbar-profile-name">ADMIN</p>
                    <i class="mdi mdi-menu-down d-none d-sm-block"></i>
                  </div>
                </a>
                <div class="dropdown-menu dropdown-menu-right navbar-dropdown preview-list" aria-labelledby="profileDropdown">
                 
                  <a href="/admin/logout" class="dropdown-item preview-item" >
                    <div class="preview-thumbnail">
                      <div class="preview-icon bg-dark rounded-circle">
                        <i class="mdi mdi-logout text-danger"></i>
                      </div>
                    </div>
                    <div class="preview-item-content">
                      <p class="preview-subject mb-1">Log out</p>
                    </div>
                  </a>
                  
                </div>
              </li>
            </ul>
            <button class="navbar-toggler navbar-toggler-right d-lg-none align-self-center" type="button" data-toggle="offcanvas">
              <span class="mdi mdi-format-line-spacing"></span>
            </button>
          </div>
        </nav>



    <section class="content-main">
      <div class="content-header ">
        <h2 style="color:#ffffff">Coupons</h2>
        
      </div>
      <button
      class="btn btn-primary"
      data-bs-toggle="modal"
      data-bs-target="#addCouponModal"
    >
      Add Coupon
    </button>
      <!-- Table for displaying coupons -->
      <table class="table table-striped">
        <thead>
          <tr>
            <th>#</th>
            <th>Coupon Name</th>
            <th>Start Date</th>
            <th>End Date</th>
            <th>Min Price</th>
            <th>Usage Limit</th>
            <th>Discount</th>
            <th>Actions</th>
          </tr>
        </thead>
        <tbody>
          <% if (coupons && coupons.length > 0) { %>
          <% coupons.forEach((coupon, index) => { %>
          <tr>
            <td><%= index + 1 %></td>
            <td><%= coupon.couponCode%></td>
            <td><%= new Date(coupon.startDate).toISOString().split('T')[0] %></td>
            <td><%= new Date(coupon.endDate).toISOString().split('T')[0] %></td>
            <td><%= coupon.minPrice %></td>
            <td><%= coupon.usageLimit %></td>
            <td><%= coupon.discount %></td>
            <td>
              <button
                class="btn btn-danger btn-sm"
                onclick="deleteCoupon('<%= coupon._id %>')"
              >
                Delete
              </button>
              <button class="btn btn-warning edit-button"
               data-id="<%= coupon._id %>"
              data-code="<%= coupon.couponCode %>"
              data-discount="<%= coupon.discount %>"
              data-min-price="<%= coupon.minPrice %>"
               data-start-date="<%= new Date(coupon.startDate).toISOString().split('T')[0] %>"
               data-end-date="<%= new Date(coupon.endDate).toISOString().split('T')[0] %>"
               data-description="<%=coupon.description %>"
               data-usage-limit="<%=coupon.usageLimit%>">
               
              Edit
            </button>
            <button 
            class="btn <%= coupon.isActive ? 'btn-danger' : 'btn-success' %>" 
            id="btn-<%= coupon._id %>" 
            value="<%= coupon._id %>" 
            onclick="changeStatus(this,'<%= coupon.active %>')">
            <%= coupon.active ? 'Deactivate' : 'Activate' %>
        </button>
             <!-- <button class="btn <%= coupon.active ? 'btn-danger' : 'btn-success' %>" id="btn-<%= coupon._id %>" 
              onclick="<%=coupon.active ? `deactivateCoupon('${coupon._id}')` : `activateCoupon('${coupon._id}')` %>">
            <%= coupon.active ? 'Deactivate' : 'Activate' %>
              </button> -->
              <!-- <button class="btn <%= coupon.active ? 'btn-danger' : 'btn-success' %>" id="btn-<%= coupon.id %>"
        onclick=" <%= coupon.active ? `deactivateCoupon(${coupon.id})` : `activateCoupon(${coupon.id})`%> ">
         <%= coupon.active ? 'Deactivate' : 'Activate' %>
</button> -->
            </td>
          </tr>
          <% }); %>
          <% } else { %>
          <tr>
            <td colspan="8" class="text-center">No coupons found</td>
          </tr>
          <% } %>
        </tbody>
      </table>
    </section>

    <!-- Add Coupon Modal -->
    <div 
    class="modal fade"
    id="addCouponModal"
    tabindex="-1"
    aria-labelledby="addCouponModalLabel"
    aria-hidden="true"
  >
    <div class="modal-dialog">
      <div class="modal-content" style="background-color: #ddd;">
        <div class="modal-header">
          <h5 class="modal-title" id="addCouponModalLabel">Add Coupon</h5>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
        </div>
        <div class="modal-body">
          <form id="addCouponForm">
            <!-- Coupon Name -->
            <div class="mb-3">
              <label for="couponName" class="form-label">Coupon Name</label>
              <input
                type="text"
                class="form-control"
                id="couponCode"
                name="couponCode"
                required
              />
              <span class="invalid-feedback">Coupon code must be at least 4 characters long.</span>
            </div>
  
            <!-- Row for Start Date and End Date -->
            <div class="row">
              <div class="col-md-6 mb-3">
                <label for="startDate" class="form-label">Start Date & Time</label>
                <input
                type="date"
                  class="form-control"
                  id="startDate"
                  name="startDate"
                  required
                />
                <span class="invalid-feedback">Start date must be a valid date and cannot be in the past.</span>
              </div>
              <div class="col-md-6 mb-3">
                <label for="endDate" class="form-label">End Date & Time</label>
                <input
                type="date"
                  class="form-control"
                  id="endDate"
                  name="endDate"
                  required
                />
                <span class="invalid-feedback">End date must be a valid date and must be after the start date.</span>
              </div>
            </div>
  
            <!-- Row for Minimum Price and Maximum Price -->
            <div class="row">
              <div class="col-md-6 mb-3">
                <label for="minPrice" class="form-label">Minimum Price</label>
                <input
                  type="number"
                  class="form-control"
                  id="minPrice"
                  name="minPrice"
                  required
                />
                <span class="invalid-feedback">Minimum price must be a non-negative number.</span>
              </div>
              <div class="col-md-6 mb-3">
                <label for="usageLimit" class="form-label">Usage Limit</label>
                <input
                  type="number"
                  class="form-control"
                  id="usageLimit"
                  name="usageLimit"
                  required
                />
                <span class="invalid-feedback">Number of time a user can apply coupon</span>
              </div>
            </div>
  
            <!-- Row for Discount and Description -->
            <div class="row">
              <div class="col-md-6 mb-3">
                <label for="discount" class="form-label">Discount ( in ₹ )</label>
                <input
                  type="number"
                  class="form-control"
                  id="discount"
                  name="discount"
                  required
                />
                <span class="invalid-feedback">Discount must be a number between 1 and 100.</span>
              </div>
              <div class="col-md-6 mb-3">
                <label for="description" class="form-label">Description</label>
                <input
                  type="text"
                  class="form-control"
                  id="description"
                  name="description"
                  required
                />
                <span class="invalid-feedback">Describe about coupon</span>
              </div>
            </div>
  
            <!-- Submit Button -->
            <div class="text-end">
              <button type="submit" class="btn btn-primary">Add Coupon</button>
            </div>
          </form>
        </div>
      </div>
    </div>
  </div>
  
  <!-- <div class="modal fade" id="editCouponModal" tabindex="-1" role="dialog" aria-labelledby="editCouponModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
      <div class="modal-content" style="background-color: #ddd;">
            <div class="modal-header">
                <h5 class="modal-title" id="editCouponModalLabel">Edit Coupon</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="editCouponForm">
                    <input type="hidden" id="editCouponId">
                    <div class="form-group">
                        <label for="editCouponCode">Coupon Code</label>
                        <input type="text" class="form-control" id="editCouponCode" required>
                        <span class="invalid-feedback">Coupon code must be at least 4 characters long.</span>
                    </div>
                    <div class="form-group">
                        <label for="editDiscount">Discount (%)</label>
                        <input type="number" class="form-control" id="editDiscount" required>
                        <span class="invalid-feedback">Discount must be a number between 1 and 100.</span>
                    </div>
                    <div class="form-group">
                        <label for="editMinPrice">Min Price</label>
                        <input type="number" class="form-control" id="editMinPrice" required>
                        <span class="invalid-feedback">Minimum price must be a non-negative number.</span>
                    </div>
                    <div class="form-group">
                        <label for="editStartDate">Start Date</label>
                        <input type="date" class="form-control" id="editStartDate" required>
                        <span class="invalid-feedback">Start date must be a valid date and cannot be in the past.</span>
                    </div>
                    <div class="form-group">
                        <label for="editEndDate">End Date</label>
                        <input type="date" class="form-control" id="editEndDate" required>
                        <span class="invalid-feedback">End date must be a valid date and must be after the start date.</span>
                    </div>
                    <button type="submit" class="btn btn-primary">Save Changes</button>
                </form>
            </div>
        </div>
    </div>
</div> -->

<div class="modal fade" id="editCouponModal" tabindex="-1" role="dialog" aria-labelledby="editCouponModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
      <div class="modal-content" style="background-color: #ddd;">
          <div class="modal-header">
              <h5 class="modal-title" id="editCouponModalLabel">Edit Coupon</h5>
              <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                  <span aria-hidden="true">&times;</span>
              </button>
          </div>
          <div class="modal-body">
              <form id="editCouponForm">
                  <input type="hidden" id="editCouponId">
                  <div class="form-group">
                      <label for="editCouponCode">Coupon Code</label>
                      <input type="text" class="form-control" id="editCouponCode" required>
                      <span class="invalid-feedback">Coupon code must be at least 4 characters long.</span>
                  </div>
                  <div class="form-group">
                      <label for="editDiscount">Discount (%)</label>
                      <input type="number" class="form-control" id="editDiscount" required>
                      <span class="invalid-feedback">Discount must be a number between 1 and 100.</span>
                  </div>
                  <div class="form-group">
                      <label for="editMinPrice">Min Price</label>
                      <input type="number" class="form-control" id="editMinPrice" required>
                      <span class="invalid-feedback">Minimum price must be a non-negative number.</span>
                  </div>
                  <div class="form-group">
                      <label for="editStartDate">Start Date</label>
                      <input type="date" class="form-control" id="editStartDate" required>
                      <span class="invalid-feedback">Start date must be a valid date and cannot be in the past.</span>
                  </div>
                  <div class="form-group">
                      <label for="editEndDate">End Date</label>
                      <input type="date" class="form-control" id="editEndDate" required>
                      <span class="invalid-feedback">End date must be a valid date and must be after the start date.</span>
                  </div>
                  <div class="form-group">
                    <label for="usageLimit" class="form-label">Usage Limit</label>
                    <input type="number" class="form-control" id="editusageLimit" name="editusageLimit" required  />
                    <span class="invalid-feedback">Number of time a user can apply coupon</span>
                  </div>
                  <div class="form-group">
                    <label for="description" class="form-label">Description</label>
                    <input type="text" class="form-control" id="editdescription"  name="editdescription" required />
                    <span class="invalid-feedback">Describe about coupon</span>
                  </div>
                </div>
                  <button type="submit" class="btn btn-primary">Save Changes</button>
              </form>
          </div>
      </div>
  </div>
</div>



<!-- Bootstrap and jQuery -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>

<!-- SweetAlert -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<!-- Axios -->
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

<!-- Alertify.js -->
<link rel="stylesheet" href="//cdn.jsdelivr.net/npm/alertifyjs@1.13.1/build/css/alertify.min.css"/>
<link rel="stylesheet" href="//cdn.jsdelivr.net/npm/alertifyjs@1.13.1/build/css/themes/default.min.css"/>
<script src="//cdn.jsdelivr.net/npm/alertifyjs@1.13.1/build/alertify.min.js"></script>

    <script>
      // Handle Delete Coupon
      async function deleteCoupon(couponId) {
     
        if (confirm('Are you sure you want to delete this coupon?')) {
          try {
            const response = await fetch(`/admin/deletecoupon/${couponId}`, {
              method: 'DELETE',
            });

            if (response.ok) {
             // alert('Coupon deleted successfully!');
             Swal.fire({
                title: "Deleted!",
                text: "Coupon deleted successfully!",
                icon: "success",
                timer:1500,
             });
              location.reload();
            } else {
             // alert('Failed to delete coupon');
             Swal.fire({
                title: "Error",
                text: "Failed to delete coupon",
                icon: "error",
                timer:1500
             });
            }
          } catch (error) {
            console.error(error);
            Swal.fire({
                title: "Error",
                text: "An error occurred while deleting the coupon",
                icon: "error",
                timer:1500,

             });
            //alert('An error occurred while deleting the coupon');
          }
        }
      } 
     
        document.getElementById("addCouponForm").addEventListener("submit", function (e) {
        e.preventDefault(); 
      
          const couponCode = document.getElementById("couponCode").value.trim();
          const startDate = new Date(document.getElementById("startDate").value);
          const endDate = new Date(document.getElementById("endDate").value);
          const minPrice = parseFloat(document.getElementById("minPrice").value);
          const usageLimit = parseInt(document.getElementById("usageLimit").value);
          const discount = parseFloat(document.getElementById("discount").value);
          const description = document.getElementById("description").value.trim();
          const now = new Date();

      // alert(couponCode)
      // alert(startDate)
      // alert(endDate)
      // alert(minPrice)
         // alert(discount)
      // alert(description)
          let errorMessage = "";
      
          // Field validations
          if (!couponCode) errorMessage += "Coupon code is required.\n";
          if(couponCode<5) errorMessage +="Coupon code must be atleast 4"
          console.log("ikujyhgf")
          if (isNaN(startDate.getTime()) || startDate < now)
            errorMessage += "Start date must be a valid future date.\n";
          if (isNaN(endDate.getTime()) || endDate < startDate)
            errorMessage += "End date must be after the start date.\n";
          if (isNaN(minPrice) || minPrice <=0)
            errorMessage += "Minimum price must be a positive number.\n";
          
          if (isNaN(discount) || discount <= 0 || discount > 100)
            errorMessage += "Discount must be between 1 and 100.\n";
          if (!description) errorMessage += "Description is required.\n";
      
          if (errorMessage) {
            alert(errorMessage);
            return;
          }
      
          // Submit form data via AJAX
          const formData = {
            couponCode,
            startDate,
            endDate,
            minPrice,
            usageLimit,
            discount,
            description,
          };
      console.log(formData)
          fetch("/admin/addcoupon", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify(formData),
          })
            .then((response) => response.json())
            .then((data) => {
              if (data.success) {
                //alert("Coupon added successfully!");
                Swal.fire({
                title: "Added!",
                text: "Coupon added successfully!",
                icon: "success",
                timer:1500,
             });
                location.reload(); // Reload the page
              } else {
                //alert("Error: " + data.message);
                Swal.fire({
                title: "Error",
                text: data.message,
                icon: "error",
                timer:1500
             });
              }
            })
            .catch((err) => {
              //alert("An error occurred. Please try again.");
              Swal.fire({
                title: "Error",
                text: "An error occurred. Please try again.",
                icon: "error",
                timer:1500,
             });
              console.error(err);
            });
        });
/////////////////////////edit///////////////////
$('.edit-button').click(function () {
        const couponId = $(this).data('id');
        console.log(couponId)
        const couponCode = $(this).data('code');
        const discount = $(this).data('discount');
        const minPrice = $(this).data('min-price');
        const startDate = $(this).data('start-date')
        console.log(startDate)
        const endDate = $(this).data('end-date');
        const usageLimit=$(this).data('usage-limit')
        console.log(usageLimit,"llllll")
        const description=$(this).data('description')
        console.log('description',description)

        $('#editCouponId').val(couponId);
        $('#editCouponCode').val(couponCode);
        $('#editDiscount').val(discount);
        $('#editMinPrice').val(minPrice);
        $('#editStartDate').val(startDate);
        $('#editEndDate').val(endDate);
        $('#editusageLimit').val(usageLimit)
        $('#editdescription').val(description)

       // $('#editCouponModal').modal('show');
       const editModal = new bootstrap.Modal(document.getElementById('editCouponModal'));
    editModal.show();
    });
    $(document).ready(function(){
    $(".close").click(function(){
        $('#editCouponModal').modal('hide');
    });
    });


  
 
          document.getElementById('editCouponForm').addEventListener('submit', (e) => {
          e.preventDefault();
         console.log("submit button clicked")
         const inputs = document.querySelectorAll('#editCouponForm .form-control');
         inputs.forEach(input => {
          input.classList.remove('is-invalid');
         const feedback = input.nextElementSibling; // The corresponding span for feedback
          if (feedback) feedback.style.display = 'none'; // Hide previous messages
          });

        const couponId = document.getElementById('editCouponId').value;
        console.log(couponId,"ertyui")
        const couponData = {
        code: document.getElementById('editCouponCode').value.trim(),
        discount: parseFloat(document.getElementById('editDiscount').value),
        minPrice: parseFloat(document.getElementById('editMinPrice').value),
        startDate: new Date(document.getElementById('editStartDate').value).toISOString(),
        endDate: new Date(document.getElementById('editEndDate').value).toISOString(),
        usageLimit:parseInt(document.getElementById('editusageLimit').value),
        description:document.getElementById('editdescription').value
       
    };
    console.log("couponData",couponData)
    let hasError = false;

    if (couponData.code.length < 4) {
        const feedback = document.getElementById('editCouponCode').nextElementSibling;
        document.getElementById('editCouponCode').classList.add('is-invalid');
        feedback.style.display = 'block'; // Show feedback message
        hasError = true;
    }

    if (isNaN(couponData.discount) || couponData.discount <= 0 || couponData.discount > 100) {
        const feedback = document.getElementById('editDiscount').nextElementSibling;
        document.getElementById('editDiscount').classList.add('is-invalid');
        feedback.style.display = 'block'; // Show feedback message
        hasError = true;
    }

    if (isNaN(couponData.minPrice) || couponData.minPrice < 0) {
        const feedback = document.getElementById('editMinPrice').nextElementSibling;
        document.getElementById('editMinPrice').classList.add('is-invalid');
        feedback.style.display = 'block'; // Show feedback message
        hasError = true;
    }

    // if (isNaN(new Date(couponData.startDate).getTime()) || new Date(couponData.startDate) < new Date()) {
    //     const feedback = document.getElementById('editStartDate').nextElementSibling;
    //     document.getElementById('editStartDate').classList.add('is-invalid');
    //     feedback.style.display = 'block'; // Show feedback message
    //     hasError = true;
    // }

    if (isNaN(new Date(couponData.endDate).getTime()) || new Date(couponData.endDate) <= new Date(couponData.startDate)) {
        const feedback = document.getElementById('editEndDate').nextElementSibling;
        document.getElementById('editEndDate').classList.add('is-invalid');
        feedback.style.display = 'block'; // Show feedback message
        hasError = true;
    }
    if (couponData.description.length < 4) {
        const feedback = document.getElementById('editdescription').nextElementSibling;
        document.getElementById('editdescription').classList.add('is-invalid');
        feedback.style.display = 'block'; // Show feedback message
        hasError = true;
    }
    if (isNaN(couponData.usageLimit) || couponData.usageLimit < 0) {
        const feedback = document.getElementById('usageLimit').nextElementSibling;
        document.getElementById('usageLimit').classList.add('is-invalid');
        feedback.style.display = 'block'; // Show feedback message
        hasError = true;
    }

    if (hasError) {
        return; // Prevent submission if there are validation errors
    }
   console.log(`${couponId}`)
    alertify.confirm('Are you sure you want to update this coupon?',
        function () {
            axios.put(`/admin/coupons/update/${couponId}`, couponData)
                .then((response) => {
                    if (response.data.success) {
                        alertify.success(response.data.message);
                    } else {
                        alertify.error(response.data.message);
                    }
                })
                .then(() => {
                    location.reload();
                })
                .catch(error => {
                    alertify.error('Error updating coupon: ' + error.response.data.message);
                });
        },
        function () {
            alertify.error('Coupon update canceled');
        }
    ).set('labels', { ok: 'Yes', cancel: 'No' });
});




 // Function to activate the coupon
 function activateCoupon(couponId) {
    // Prompt confirmation using Alertify
    alertify.confirm('Activate Coupon', 'Are you sure you want to activate this coupon?', 
        function() { // On Confirm
            // Send PATCH request to activate the coupon
            axios.patch(`/admin/coupons/status/${couponId}`, { active: true })
                .then(response => {
                    // Check if the response was successful
                    if (response.status === 200) {
                        // Update button state dynamically
                        const button = document.getElementById(`btn-${couponId}`);
                        button.classList.remove('btn-success');
                        button.classList.add('btn-danger');
                        button.innerText = 'Deactivate';
                        button.setAttribute('onclick', `deactivateCoupon('${couponId}')`);
                    }
                })
                .catch(error => {
                    console.error('Error activating coupon:', error);
                    alertify.error('Failed to activate coupon. Please try again.');
                });
        }, 
        function() { // On Cancel
            alertify.message('Cancelled');
        }
    );
}

function deactivateCoupon(couponId) {
    // Prompt confirmation using Alertify
    alertify.confirm('Deactivate Coupon', 'Are you sure you want to deactivate this coupon?', 
        function() { // On Confirm
            // Send PATCH request to deactivate the coupon
            axios.patch(`/admin/coupons/status/${couponId}`, { active: false })
                .then(response => {
                    // Check if the response was successful
                    if (response.status === 200) {
                        // Update button state dynamically
                        const button = document.getElementById(`btn-${couponId}`);
                        button.classList.remove('btn-danger');
                        button.classList.add('btn-success');
                        button.innerText = 'Activate';
                        button.setAttribute('onclick', `activateCoupon('${couponId}')`);
                    }
                })
                .catch(error => {
                    console.error('Error deactivating coupon:', error);
                    alertify.error('Failed to deactivate coupon. Please try again.');
                });
        }, 
        function() { // On Cancel
            alertify.message('Cancelled');
        }
    );
}

function changeStatus(button,isActive) {
  let stat;
        const couponId = button.value; // Get the offer ID from the button's value
       // const isActive = button.classList.contains('btn-danger'); // Check if the offer is currently active
       console.log("isActive",isActive)
       console.log(typeof isActive)
       if(isActive=="true")
     stat =false;
    if(isActive=="false")
    stat=true
    console.log("stat",stat)
       const action = isActive ? 'deactivate' : 'activate';
    
        // SweetAlert2 confirmation dialog
        Swal.fire({
            title: `Are you sure you want to ${action} this offer?`,
            text: `Are you sure you want to ${action} this offer?`,
            icon: "warning",
            showCancelButton: true,
            confirmButtonText: 'Yes, proceed',
            cancelButtonText: 'No, cancel',
            reverseButtons: true
        }).then((result) => {
            if (result.isConfirmed) {
                // Send a POST request to toggle the offer status
                axios.patch(`/admin/coupons/status/${couponId}`, { active: stat })
                //axios.patch(`/admin/offers/action/${offerId}`)
                    .then(response => {
                        if (response.data.success) {
                            // Update the button class and text based on the new state
                            if (response.data.isActive) {
                                button.classList.remove('btn-success');
                                button.classList.add('btn-danger');
                                button.textContent = 'Deactivate';
                            } else {
                                button.classList.remove('btn-danger');
                                button.classList.add('btn-success');
                                button.textContent = 'Activate';
                            }
    window.location.href='/admin/coupon'
                            // Success message
                            Swal.fire("Success!", `Offer has been ${action}d successfully.`, "success");
                        } else {
                            Swal.fire("Error!", "Failed to toggle offer status.", "error");
                        }
                    })
                    .catch(error => {
                        console.log(error)
                        console.error('Error toggling offer status:', error);
                        Swal.fire("Error!", "An error occurred while trying to toggle the offer status.", "error");
                    });
            }
        });
    }
</script>
      

  
  </body>
</html>
