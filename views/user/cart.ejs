<%- include("../../views/partials/user/header") %>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<style>
  button {
  pointer-events: auto;
  position: relative;
  z-index: 10;
  margin-left: 10px;
}
.overlay {
  position: absolute;
  z-index: 5;
}

</style>

<!-- Modal Search Start -->
<div
  class="modal fade"
  id="searchModal"
  tabindex="-1"
  aria-labelledby="exampleModalLabel"
  aria-hidden="true"
>
  <div class="modal-dialog modal-fullscreen">
    <div class="modal-content rounded-0">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">Search by keyword</h5>
        <button
          type="button"
          class="btn-close"
          data-bs-dismiss="modal"
          aria-label="Close"
        ></button>
      </div>
      <div class="modal-body d-flex align-items-center">
        <div class="input-group w-75 mx-auto d-flex">
          <input
            type="search"
            class="form-control p-3"
            placeholder="keywords"
            aria-describedby="search-icon-1"
          />
          <span id="search-icon-1" class="input-group-text p-3"
            ><i class="fa fa-search"></i
          ></span>
        </div>
      </div>
    </div>
  </div>
</div>
<!-- Modal Search End -->

<!-- Single Page Header start -->
<div class="container-fluid page-header py-5">
  <h1 class="text-center text-white display-6">Cart</h1>
  <ol class="breadcrumb justify-content-center mb-0">
    <li class="breadcrumb-item"><a href="/home">Home</a></li>
    <li class="breadcrumb-item"><a href="/shop">Shop</a></li>
    <li class="breadcrumb-item active text-white">Cart</li>
  </ol>
</div>
<!-- Single Page Header End -->

<!-- Cart Page Start -->
<div class="container-fluid py-5">
  <div class="container py-5">
    <% if ((carts && carts.items)) { %>
    <div class="table-responsive">
      <table class="table">
        <thead>
          <tr class="text center">
            <th scope="col">Products</th>
            <th scope="col">Name</th>
            <th scope="col">Price</th>
            <th scope="col">Quantity</th>
            <th scope="col">Discount</th>
            <th scope="col">Total</th>
            <th scope="col">Handle</th>
            <th scope="col">Cancel</th>
          </tr>
        </thead>
        <tbody>
          <% carts.items.forEach(item => { %>
          <tr id="product-row-<%= item.productId._id %>">
            <th scope="row">
              <div class="d-flex align-items-center">
                <img
                  src="<%=item.productId.productImage[0]%>"
                  class="img-fluid me-5 rounded-circle"
                  style="width: 80px; height: 80px"
                  alt=""
                />
              </div>
            </th>
            <td>
              <p class="mb-0 mt-4"><%=item.productId.productName%></p>
            </td>
            <td>
              <p class="mb-0 mt-4">₹<%= item.price.toFixed(2) %></p>
            </td>
            <td>
              <p class="mb-0 mt-4"id='product-quantity'><%= item.quantity %></p>
            </td>
            <td>
              <p class="mb-0 mt-4"><%= item.discount||0 %></p>
            </td>
            <td>
              <p class="mb-0 mt-4"id="product-total">₹<%= item.totalPrice.toFixed(2) %></p>
            </td>
            <td>
              <div class="input-group quantity mt-4" style="width: 100px">
                <div class="input-group-btn">
                  <button
                    class="btn btn-sm btn-minus rounded-circle bg-light border"
                    onclick="updateQuantity('<%= item.productId._id %>', '<%= item.quantity - 1 %>,<%= item.productId.stock%>')"
                  >
                    <i class="fa fa-minus"></i>
                  </button>
                </div>

                <div class="input-group-btn">
                  <button 
                    class="btn btn-sm btn-plus rounded-circle bg-light border"
                    onclick="updateQuantity('<%= item.productId._id %>', '<%= item.quantity + 1 %>,<%= item.productId.stock%>')"
                  >
                    <i class="fa fa-plus"></i>
                  </button>
                </div>
              </div>
            </td>

            <td>
              <button
                class="btn btn-md rounded-circle bg-light border mt-4"
                onclick="removeFromCart('<%= item.productId._id %>')"
              >
                <i class="fa fa-times text-danger"></i>
              </button>
            </td>
          </tr>
          <% }); %>
        </tbody>
      </table>
      <div>
        <div class="mt-5">
          <input
            type="text"
            class="border-0 border-bottom rounded me-5 py-3 mb-4"
            placeholder="Coupon Code"
          />
          <button
            class="btn border-secondary rounded-pill px-4 py-3 text-primary"
            type="button"
          >
            Apply Coupon
          </button>
        </div>
        <div class="row g-4 justify-content-end">
          <div class="col-8"></div>
          <div class="col-sm-8 col-md-7 col-lg-6 col-xl-4">
            <div class="bg-light rounded">
              <div class="p-4">
                <h1 class="display-6 mb-4">
                  Cart <span class="fw-normal">Total</span>
                </h1>
                <div class="d-flex justify-content-between mb-4">
                  <h5 class="mb-0 me-4">Subtotal:</h5>
                  <p class="mb-0">₹<%=total||0%></p>
                </div>

                <div class="d-flex justify-content-between">
                  <h5 class="mb-0 me-4">Shipping</h5>
                  <div class="">
                    <p class="mb-0">Charge: ₹100</p>
                  </div>
                </div>
                <p class="mb-0 text-end"></p>
              </div>
              <div
                class="py-4 mb-4 border-top border-bottom d-flex justify-content-between"
              >
                <h5 class="mb-0 ps-4 me-4">Total</h5>
                <p class="mb-0 pe-4">₹<%=total+100 || 0 %></p>
              </div>
              <button class="btn border-secondary rounded-pill px-4 py-3 text-primary text-uppercase mb-4 ms-4" type="button" onclick="window.location.href='/getcheckout'" >Proceed Checkout</button>
            </div>
          </div>
        </div>
        <% } else { %>
        <p>Your cart is empty.</p>
        <% } %>
      </div>
    </div>
    <!-- Cart Page End -->

    <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css"></script>
    <script>
      // function updateQuantity(productId, quantity, stock) {
      //   if (quantity < 1) {
      //     Swal.fire({
      //       title: "Invalid Quantity",
      //       text: "Quantity cannot be less than 1",
      //       icon: "warning",
      //     });
      //     return;
      //   }

      //   if (quantity > 5) {
      //     Swal.fire({
      //       title: "Invalid Quantity",
      //       text: "Quantity cannot be more than 5",
      //       icon: "warning",
      //     });
      //     return;
      //   }

      //   if (quantity > stock) {
      //     Swal.fire({
      //       title: "Stock Limit Exceeded",
      //       text: `Only ${stock} units are available in stock`,
      //       icon: "error",
      //     });
      //     return;
      //   }

      //   fetch("/cart/update", {
      //     method: "POST",
      //     headers: { "Content-Type": "application/json" },
      //     body: JSON.stringify({ productId, quantity }),
      //   })
      //     .then((response) => {
      //       if (!response.ok) {
      //         return response.json().then((data) => {
      //           Swal.fire({
      //             title: "Error",
      //             text: data.error || "Failed to update cart",
      //             icon: "error",
      //             confirmButtonText: "Okay",
      //           });
      //         });
      //       }
      //     })

      //     .then(() => {
      //       location.reload();

      //       const cartItemBadge = document.getElementById("cartitems");
      //       if (data.cartitemcount !== undefined) {
      //         cartItemBadge.textContent = data.cartitemcount; // Update badge count
      //       }
      //     })

      //     .catch((error) => {
      //       console.error("Error updating cart:", error);
      //     });
      // }
      function updateQuantity(productId, quantity, stock) {
  // Parse quantity as a number
  quantity = parseInt(quantity);

  if (isNaN(quantity)) {
    console.warn("Invalid quantity provided:", quantity);
    return;
  }

  // Validate quantity
  if (quantity < 1) {
          Swal.fire({
            title: "Invalid Quantity",
            text: "Quantity cannot be less than 1",
            icon: "warning",
          });
          return;
        }

        if (quantity > 5) {
          Swal.fire({
            title: "Invalid Quantity",
            text: "Quantity cannot be more than 5",
            icon: "warning",
          });
          return;
        }

        if (quantity > stock) {
          Swal.fire({
            title: "Stock Limit Exceeded",
            text: `Only ${stock} units are available in stock`,
            icon: "error",
          });
          return;
        }


  // Perform AJAX request to update the cart
  $.ajax({
    url: "/cart/update",
    type: "POST",
    contentType: "application/json",
    data: JSON.stringify({ productId, quantity }),
    success: function (response) {
      console.log("Cart updated successfully:", response);

      // Update UI dynamically
      const productRow = $(`#product-row-${productId}`);
      productRow.find("#product-total").text(`₹${response.newTotalPrice}`);
    productRow.find('#product-quantity').text(`${response.quantity}`)
    
    },
    error: function (xhr) {
      console.error("Error updating cart:", xhr.responseJSON);
    },
  });
}




      function removeFromCart(productId) {
     $.ajax({
    url: "/cart/remove", // Backend endpoint
    type: "POST",
    contentType: "application/json",
    data: JSON.stringify({ productId }), // Send productId
    success: function (response) {
      // Handle success response
      console.log("Product removed successfully:", response);

      // Remove the product row
      const productRow = $(`#product-row-${productId}`);
      if (productRow.length) {
        productRow.remove();
      }

      // Update the cart badge
      const cartItemBadge = $("#cartitems");
      if (cartItemBadge.length && response.cartitemcount !== undefined) {
        cartItemBadge.text(response.cartitemcount);
      }

      // Optionally, show a success alert
      Swal.fire({
        title: "Success",
        text: "Product removed from cart successfully!",
        icon: "success",
        confirmButtonText: "Okay",
      });
    },
    error: function (xhr) {
      // Handle errors
      console.error("Error removing product from cart:", xhr.responseJSON);
      const errorMessage =
        xhr.responseJSON?.error || "Failed to remove product from cart";
      Swal.fire({
        title: "Error",
        text: errorMessage,
        icon: "error",
        confirmButtonText: "Okay",
      });
    },
  });
}


    </script>
    <%- include("../../views/partials/user/footer") %>
  </div>
</div>
