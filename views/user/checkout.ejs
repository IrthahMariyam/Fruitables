<%- include("../../views/partials/user/header") %> 
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<style>
    
/* modal style */
.coupon-container {
  max-height: 400px;
  overflow-y: auto;
}

.coupon-card {
  border: 2px dashed #ddd;
  padding: 15px;
  margin-bottom: 15px;
  border-radius: 8px;
  position: relative;
  background: #f8f9fa;
}

.coupon-code {
  font-weight: bold;
  color: #dc3545;
  font-size: 1.2em;
}

.coupon-details {
  margin: 10px 0;
}

.minimum-spend {
  font-size: 0.9em;
  color: #6c757d;
}

.apply-coupon-btn {
  position: absolute;
  right: 15px;
  top: 50%;
  transform: translateY(-50%);
}
    </style>
       


        <!-- Single Page Header start -->
        <div class="container-fluid page-header py-5">
            <h1 class="text-center text-white display-6">Checkout</h1>
            <ol class="breadcrumb justify-content-center mb-0">
                <li class="breadcrumb-item"><a href="/home">home</a></li>
                <li class="breadcrumb-item"><a href="/shop">shop</a></li>
                <li class="breadcrumb-item active text-white">Checkout</li>
            </ol>
        </div>
        <!-- Single Page Header End -->


        <!-- Checkout Page Start -->
        <div class="container-fluid py-5">
            <div class="container py-5">
                <h1 class="mb-4">Billing details</h1>
                <form action="#" id="checkout-form">
                    <div class="row g-5">
                        
                        <div class="col-md-12 col-lg-6 col-xl-7">
                            <div class="form-item">
                                <div id="additional-addresses">
                                    <h3>Select a  Address</h3>
                                    <% address.forEach(function (addr, index) { %>
                                        <div>
                                            <input
                                                type="radio"
                                                name="address"
                                                id="address-<%= index %>"
                                                value="<%= addr._id %>"
                                                <%= index === 0 ? "checked" : "" %>
                                            >
                                            <label for="address-<%= index %>">
                                                <%= addr.name %>, <%= addr.landmark %>, <%= addr.district %>, <%= addr.pincode %>,<%= addr.state%>,<%=addr.phone%>
                                            </label>
                                        </div>
                                    <% }); %>
                                </div>
                            </div>
                        

                        
                            <div class="row">
                                <div class="col-md-12 col-lg-6"><br>
                                    <div class="form-item w-100">
                                        <input type="hidden" class="form-control" id="addressId" value="<%= address._id %>">
                                        <label class="form-label my-6">Name<sup>*</sup></label>
                                        <input type="text" class="form-control" id="name" value="<%= address.name %>" >
                                    </div>
                                </div>
                               
                            </div>
                           
                            <div class="form-item">
                                <label class="form-label my-3">Landmark <sup>*</sup></label>
                                <input type="text" class="form-control" placeholder="House Number Street Name" required id="landmark" >
                            </div>
                            <div class="form-item">
                                <label class="form-label my-3">Town/City<sup>*</sup></label>
                                <input type="text" class="form-control" id="city"  required >
                            </div>
                            <div class="form-item">
                                <label class="form-label my-3">State<sup>*</sup></label>
                                <input type="text" class="form-control" id="state" required >
                            </div>
                            <div class="form-item">
                                <label class="form-label my-3">Postcode<sup>*</sup></label>
                                <input type="text" class="form-control" id="postcode" required >
                            </div>
                            <div class="form-item">
                                <label class="form-label my-3">Mobile<sup>*</sup></label>
                                <input type="tel" class="form-control" id="mobile" required >
                            </div>
                           
                            <hr>
                            <div class="form-check my-3">
                                <input class="form-check-input" type="checkbox" id="ship-different-address" name="Address" >
                                <label class="form-check-label" for="Address-1">Ship to a different address?</label>
                            </div>
                            
                        </div>
                        <div class="col-md-12 col-lg-6 col-xl-5">
                            <div class="table-responsive">
                                <table class="table text-center">
                                    <thead>
                                        <tr>
                                            <th scope="col">Products</th>
                                            <th scope="col">Name</th>
                                            <th scope="col">Price</th>
                                            <th scope="col">Quantity</th>
                                            <th scope="col">Total</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <% carts.items.forEach(item => { %>
                                        <tr>
                                            <th scope="row">
                                                <div class="d-flex align-items-center mt-2">
                                                    <img src="<%=item.productId.productImage[0]%>" class="img-fluid rounded-circle" style="width: 90px; height: 90px;" alt="">
                                                </div>
                                            </th>
                                           
                                            <td class="py-5"><%=item.productId.productName%></td>
                                            <td class="py-5">₹<%= item.price.toFixed(2) %></td>
                                            <td class="py-5"><%= item.quantity %></td>
                                            <td class="py-5">₹<%= item.totalPrice.toFixed(2) %></td>
                                            <td><input type="hidden" id="productid" value="<%=item.productId._id%>"></td>
                                        </tr>
                                        <% }); %>
                                       
                                        
                                        <tr>



                                          <th scope="row">
                                          </th>
                                          <td class="py-5">
                                              <p class="mb-0 text-dark py-3">Subtotal</p>
                                          </td>
                                          <td class="py-5"></td>
                                          <td class="py-5"></td>
                                          <td class="py-5">
                                              <div class="py-3 border-bottom border-top">
                                                  <p class="mb-0 text-dark" id="totalprice">  ₹<%=total%> </p>
                                              </div>
                                          </td>


                                        </tr>
                                        
                                       
                                        <tr>

                                          <th scope="row">
                                          </th>
                                          <td class="py-5">
                                              <p class="mb-0 text-dark py-3">Shipping charge</p>
                                          </td>
                                          <td class="py-5"></td>
                                          <td class="py-5"></td>
                                          <td class="py-5">
                                              <div class="py-3 border-bottom border-top">
                                                  <p class="mb-0 text-dark" > ₹  100 </p>
                                              </div>
                                          </td>


                                        </tr>
                                        <tr>
                                          
                                          <th scope="row">
                                          </th>
                                          <td class="py-5">
                                              <p class="mb-0 text-dark py-3">Discount</p>
                                          </td>
                                          <td class="py-5"></td>
                                          <td class="py-5"></td>
                                          <td class="py-5">
                                              <div class="py-3 border-bottom border-top">
                                                  <p class="mb-0 text-dark" id="discountprice"> ₹ 0 </p>
                                              </div>
                                          </td>


                                        </tr>
                                        <tr>
                                            <th scope="row">
                                            </th>
                                            <td class="py-5">
                                                <p class="mb-0 text-dark text-uppercase py-3">TOTAL</p>
                                            </td>
                                            <td class="py-5"></td>
                                            <td class="py-5"></td>
                                            <td class="py-5">
                                                <div class="py-3 border-bottom border-top">
                                                    <p class="mb-0 text-dark" id="totalorderamount"> ₹<%=total + 100 %></p>
                                                </div>
                                            </td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                           
                           
                            <div class="row g-4 text-center align-items-center justify-content-center border-bottom py-3">
                                <div class="col-12">
                                    <div class="form-check text-start my-3">
                                        <input type="checkbox" class="form-check-input bg-primary border-0" id="Onlinepayment" name="paymentMethod" value="Online Payment">
                                        <label class="form-check-label" for="Delivery-1">Online Payment(via Razorpay)</label>
                                    </div>
                                </div>
                            </div>
                            <div class="row g-4 text-center align-items-center justify-content-center border-bottom py-3">
                                <div class="col-12">
                                    <div class="form-check text-start my-3">
                                        <input type="checkbox" class="form-check-input bg-primary border-0" id="paymentMethodCOD" name="paymentMethod" value="Cash on Delivery">
                                        <label class="form-check-label" for="paymentMethodCOD">Cash on Delivery</label>
                                    </div>
                                </div>
                            </div>
                            <div class="mt-5 d-flex align-items-center">
                                <button class="btn border-secondary rounded-pill px-4 py-3 text-primary" 
                                        type="button" id="viewCouponsButton"
                                        onclick="fetchAndDisplayCoupons()">
                                  Apply Coupon
                                </button>
                                <button class="btn border-secondary rounded-pill px-4 py-3 text-primary" 
                                type="button" id="deleteCouponsButton"
                                onclick="removeCoupon(`<%=total%>`)">
                          Remove Coupon
                        </button>
                       
                        <p id="couponapplied" class="rounded border border-light p-5 " placeholder="coupon code"></p>

                              </div>
                            <div class="row g-4 text-center align-items-center justify-content-center pt-4">
                                <button type="button" id="placeorder" name="placeorder"class="btn border-secondary py-3 px-4 text-uppercase w-100 text-primary" >Place Order</button>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>
        <!-- Checkout Page End -->

        <div class="modal fade" id="couponModal" tabindex="-1" aria-labelledby="couponModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered">
              <div class="modal-content">
                <div class="modal-header">
                  <h5 class="modal-title" id="couponModalLabel">Available Coupons</h5>
                  <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                  <div class="coupon-container" id="couponsList">
                    <!-- Coupons will be dynamically inserted here -->
                  </div>
                 
                </div>
              </div>
            </div>
          </div>




        <%- include("../../views/partials/user/footer") %>
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.4/jquery.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/js/bootstrap.bundle.min.js"></script>
  
        <script>
    document.addEventListener("DOMContentLoaded", function () {
        //coupons
        const couponCode = document.getElementById('couponapplied').innerText;
  console.log(couponCode);
        const couponButton = document.getElementById('viewCouponsButton');
        const deletecouponButton = document.getElementById('deleteCouponsButton');
  if (couponButton) {
    couponButton.addEventListener('click', fetchAndDisplayCoupons);
  } else {
    console.log("viewCouponsButton not found!");
  }
  document.querySelector("#couponModal .btn-close").addEventListener("click", function () {
    couponModal.hide(); // Manually close modal
    });
    document.querySelector('.modal-backdrop')?.remove();
    document.body.classList.remove('modal-open');
  //order
            const shipDifferentCheckbox = document.getElementById("ship-different-address");
            const addressRadios = document.querySelectorAll("input[name='address']");
            const addressFields = {
                addressId: document.getElementById("addressId"),
                name: document.getElementById("name"),
                landmark: document.getElementById("landmark"),
                district: document.getElementById("city"),
                postcode: document.getElementById("postcode"),
                mobile: document.getElementById("mobile"),
                state: document.getElementById("state"),
            };

            // Load default address
            function loadDefaultAddress() {
                const defaultAddress = JSON.parse('<%- JSON.stringify(address[0]) %>');
                updateAddressFields(defaultAddress);
            }

            // Update address fields with given address data
            function updateAddressFields(address) {
                addressFields.addressId.value = address._id || "";
                addressFields.name.value = address.name || "";
                addressFields.landmark.value = address.landmark || "";
                addressFields.district.value = address.district || "";
                addressFields.postcode.value = address.pincode || "";
                addressFields.mobile.value = address.phone || "";
                addressFields.state.value = address.state || "";
            }

            // Clear address fields
            function clearAddressFields() {
                Object.values(addressFields).forEach(field => field.value = "");
            }

            // Handle address radio button change
            document.querySelector("body").addEventListener("change", function (event) {
                if (event.target.name === 'address') {
                    const selectedAddress = JSON.parse('<%- JSON.stringify(address) %>').find(addr => addr._id === event.target.value);
                    if (selectedAddress) updateAddressFields(selectedAddress);
                }
            });

            // Handle ship to different address checkbox
            shipDifferentCheckbox.addEventListener("change", function () {
                this.checked ? clearAddressFields() : loadDefaultAddress();
            });

            // Extract product details from the table
            function getProductDetails() {
                const productRows = document.querySelectorAll("table tbody tr");
                const products = [];
                productRows.forEach(row => {
                    const _id=document.getElementById('productid').value;
                    const productImage=row.querySelector("td:nth-child(1)")?.textContent.trim();
                    const productName = row.querySelector("td:nth-child(2)")?.textContent.trim();
                   
                    const price = row.querySelector("td:nth-child(3)")?.textContent.replace("₹", "").trim();
                    const quantity = row.querySelector("td:nth-child(4)")?.textContent.trim();
                    const totalPrice = row.querySelector("td:nth-child(5)")?.textContent.replace("₹", "").trim();
                    // alert(_id);
                    // alert(productName)
                    // alert(price)
                    // alert(quantity)
                    // alert(totalPrice)
                    // console.log("productName",productName)
                    // console.log("price:" ,parseFloat(price))
                    // console.log("quantity",parseInt(quantity))
                    // console.log("totalPrice",parseFloat(totalPrice))
                    if (productName && price && quantity && totalPrice) {
                        products.push({
                            _id,
                            productName,
                            productImage,
                            price: parseFloat(price),
                            quantity: parseInt(quantity, 10),
                            totalPrice: parseFloat(totalPrice),
                        });
                    }console.log(products,"products")
                });
                return products;
            }

            // Handle place order button
                document.getElementById("placeorder").addEventListener("click", function () {
                const paymentCheckboxes = document.querySelectorAll('input[name="paymentMethod"]:checked');
                const selectedPaymentMethod = Array.from(paymentCheckboxes).map(checkbox => checkbox.value)[0];

                if (!selectedPaymentMethod) {
                    Swal.fire({
                        title: "Payment Method Required",
                        text: "Please select a payment method to proceed.",
                        icon: "warning",
                    });
                    return;
                }

                const selectedAddressId = document.querySelector("input[name='address']:checked").value||null
           
                const address = {
                    
                    name: addressFields.name.value.trim(),
                    landmark: addressFields.landmark.value.trim(),
                    district: addressFields.district.value.trim(),
                    state: addressFields.state.value.trim(),
                    pincode: addressFields.postcode.value.trim(),
                    phone: addressFields.mobile.value.trim(),
                };
                const validIndianPattern = /^[6-9]\d{9}$/;
  const invalidPattern = /^(.)\1{9}$/;

  if (!address.name || !address.landmark || !address.district || !address.state || !address.pincode || !address.phone) {
    alert('Please fill all fields!');
    return;
  }
  if (invalidPattern.test(address.phone)) {
    alert('Phone number cannot be all the same digit');
    return;
  }
  if (!validIndianPattern.test(address.phone)) {
    alert('Enter a valid Indian phone number');
    return;
  }
                const orderData = {
                   // addressId: selectedAddressId,
                    address:address,
                    paymentMethod: selectedPaymentMethod,
                    orderedItems: getProductDetails(), // Include product details
                };
                console.log(orderData,"ejs")
                // Validate required fields
                if (!Object.values(orderData).every(Boolean) || !orderData.orderedItems.length) {
                    Swal.fire({
                        title: "Incomplete Details",
                        text: "Please fill all required fields and ensure products are present in the cart.",
                        icon: "warning",
                    });
                    return;
                }

                // Submit order
                fetch("/placeorder", {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify(orderData),
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        Swal.fire({
                            title: "Order Placed!",
                            text: "Your order was placed successfully.",
                            icon: "success",
                        }).then(() => (window.location.href = "/shop"));
                    } else {
                        Swal.fire({
                            title: "Error",
                            text: data.error || "Failed to place order.",
                            icon: "error",
                        });
                    }
                })
                .catch(error => {
                    console.log("Error placing order:", error);
                    Swal.fire({
                        title: "Error",
                        text: "Something went wrong. Please try again.",
                        icon: "error",
                    });
                });
            });

            // Initialize with the default address
            loadDefaultAddress();




        })
function removeCoupon(total){
console.log("remove coupon")
const couponCode=$('#couponapplied').text().trim();
console.log("coupon",couponCode)
const cartTotal = parseFloat($(`#totalprice`).text().replace('₹', '').trim()) ;
if (!couponCode){
 
alert("No coupons applied")
return false
}
fetch(`/removeCoupon?couponCode=${couponCode}`, {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json'
    },
    body: JSON.stringify({
      couponCode: couponCode,
      
    })
  })
  .then(response => {
    if (!response.ok) {
      throw new Error('Network response was not ok');
    }
    return response.json();
  })
  .then(data => {
    if (data.success) {
      // Update the subtotal
      console.log("retuned")
    
      Swal.fire({
        title: 'Success',
        text: 'Coupon removed successfully!',
        icon: 'success'
      });

      $(`#discountprice`).text( `₹ 0`)
      
    
      const finalTotal = 100 + parseFloat(total)
      $('#totalorderamount').text(`₹${finalTotal}`);
      $('#couponapplied').text("")



    } else {
      Swal.fire({
        title: 'Error',
        text: data.message || 'Failed to apply coupon',
        icon: 'error'
      });
  }})  
  .catch(error => {
    console.log('Error fetching coupons:', error);
    Swal.fire({
      title: 'Error',
      text: 'Failed to remove coupons. Please try again.',
      icon: 'error'
    });
  })   
    

}

 function fetchAndDisplayCoupons() {
  console.log("inside")
 const cartTotal = parseFloat($(`#totalprice`).text().replace('₹', '').trim()) ;
  // alert(typeof cartTotal)
  // alert(cartTotal)
  // Fetch coupons from the server
  fetch(`/getCouponCodes?cartTotal=${cartTotal}`, {
    method: 'GET',
    headers: {
      'Content-Type': 'application/json'
    },
    })
  .then(response => response.json())
  .then(coupons => {
   
    const couponsContainer = document.getElementById('couponsList');
    if (!couponsContainer) {
        console.log('Coupons container not found!');
        return;
      }
    couponsContainer.innerHTML = '';

    if (coupons.length === 0) {
      couponsContainer.innerHTML = '<div class="alert alert-info">No coupons available for your purchase amount.</div>';
      return;
    }

    coupons.forEach(coupon => {
      const couponElement = createCouponElement(coupon);
      couponsContainer.appendChild(couponElement);
    });

    // Show the modal
   
    const modalElement = document.getElementById('couponModal');
      const modalInstance = bootstrap.Modal.getInstance(modalElement) || new bootstrap.Modal(modalElement);
      modalInstance.show();
  })
  .catch(error => {
    console.log('Error fetching coupons:', error);
    Swal.fire({
      title: 'Error',
      text: 'Failed to load available coupons. Please try again.',
      icon: 'error'
    });
  });
}


function createCouponElement(coupon) {
  const div = document.createElement('div');
  div.className = 'coupon-card';
  div.innerHTML = `
    <div class="coupon-code">${coupon.couponCode}</div>
    <div class="coupon-details">
      <p class="mb-1">${coupon.description}</p>
      <p class="minimum-spend mb-1">Minimum spend: ₹${coupon.minPrice}</p>
      <p class="mb-1">Discount: ₹${coupon.discount}</p>
    </div>
    <button class="btn btn-primary apply-coupon-btn">
      Apply
    </button>
  `;

  // Add click event listener to the apply button
  const applyButton = div.querySelector('.apply-coupon-btn');
  applyButton.addEventListener('click', function(e) {
    e.preventDefault();
    applyCoupon(coupon.couponCode);
  });

  return div;
}
      
function applyCoupon(couponCode) {
 
  const cartTotal = parseFloat($(`#totalprice`).text().replace('₹', '').trim()) ;
  alert(cartTotal)
  console.log("Cart Total:", cartTotal); // Debug log

  if (isNaN(cartTotal)) {
    
    console.log('Invalid cart total:', cartTotal);
    Swal.fire({
      title: 'Error',
      text: 'Could not determine cart total. Please try again.',
      icon: 'error'
    });
    return;
  }

  fetch('/applyCoupon', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json'
    },
    body: JSON.stringify({
      couponCode: couponCode,
      cartTotal: cartTotal
    })
  })
  .then(response => {
    if (!response.ok) {
      throw new Error('Network response was not ok');
    }
    return response.json();
  })
  .then(data => {
    if (data.success) {
      // Update the subtotal
      console.log("retuned")
      console.log(data)
     
     const totalamount = parseFloat($('#totalorderamount').text().replace('₹', '').trim());

   
     
      console.log(couponCode)
      $(`#couponapplied`).text(`${couponCode}`);

console.log("seen")
      $(`#discountprice`).text( `₹${data.discount.toFixed(2)}`)
      
    
      const finalTotal = 100 + data.finalAmount;
      $('#totalorderamount').text(`₹${finalTotal.toFixed(2)}`);



      // Close the modal properly
      const modalElement = document.getElementById('couponModal');
      if (modalElement) {
        const modalInstance = bootstrap.Modal.getInstance(modalElement);
        if (modalInstance) {
          modalInstance.hide();
         
          modalElement.addEventListener('hidden.bs.modal', function () {
          
            const backdrop = document.querySelector('.modal-backdrop');
            if (backdrop) {
              backdrop.remove();
            }
            document.body.classList.remove('modal-open');
          }, { once: true }); 
        }
      }





      Swal.fire({
        title: 'Success',
        text: 'Coupon applied successfully!',
        icon: 'success'
      });
    } else {
      Swal.fire({
        title: 'Error',
        text: data.message || 'Failed to apply coupon',
        icon: 'error'
      });
    }
  })
  .catch(error => {
    console.log('Error applying coupon:', error);
    Swal.fire({
      title: 'Error',
      text: 'Failed to apply coupon. Please try again.',
      icon: 'error'
    });
  });
}


</script>

        
        


