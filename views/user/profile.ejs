<head>
  <style>
        .card-green {
          background-color:  #81C408;
        }
        .main {
          padding: 30px 0;
        }
       
       
        .dashboard-menu {
          background-color: #bde670 !important;
          border-radius: 10px;
          padding: 15px;
          box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        }
       
       
        .dashboard-menu .nav-link {
        font-weight: bold;
        color: #30683c;
        box-shadow: 0 4px 10px rgba(123, 131, 112, 0.3), 0 4px 20px rgba(0, 191, 255, 0.2);
        transition: box-shadow 0.3s ease;
       }
       
       
       .dashboard-menu .nav-link:hover {
        color: #00bfff;
        box-shadow: 0 4px 15px rgba(173, 255, 47, 0.5), 0 6px 25px rgba(0, 191, 255, 0.4);
       }
       
       
        .card {
           border-radius: 10px;
           
          box-shadow: 0 4px 10px rgba(0, 0, 0, 0.5);
          margin-bottom: 20px;
        }
       
       
        .card-header {
          background-color: #81C408;
          border-radius: 10px 10px 0 0;
        }
       
       
        .btn-success {
          background-color:#81C408;
          border-color: #6bb87d;
        }
       
       
        .btn-success:hover {
          background-color: #506955;
        }
       
       
        .form-group {
          margin-bottom: 15px;
        }
       
       
        .required {
          color: red;
        }
       
       
         @media (max-width: 768px) {
           .dashboard-menu {
            padding: 10px;
          }
       
       
          .card {
            margin-bottom: 15px;
          }
        }
        .page-header.breadcrumb-wrap {
        background-color: #eee2e9;
        padding: 15px 0;
       }
       
       
       .breadcrumb {
        display: flex;
        align-items: center;
        font-family: 'Arial', sans-serif;
        font-size: 16px;
        color: #121311;
       }
       
       
       .breadcrumb a {
        color: #81C408;
        text-decoration: none;
        position: relative;
        margin: 0 5px;
       }
       
       
       .breadcrumb a:hover {
           color: #0056b3;
       }
       
       
       .breadcrumb span {
        margin: 0 5px;
        color: #999;
       }
       
       
       .breadcrumb a::after {
        content: '';
        position: absolute;
        width: 100%;
        height: 2px;
        background: #6e6e3a;
        left: 0;
        bottom: -2px;
        transform: scaleX(0);
        transition: transform 0.3s ease;
       }
       
       
       .breadcrumb a:hover::after {
        transform: scaleX(1);
       }
       </style>
  </head>
  
  
  
  <%- include("../../views/partials/user/header") %>  
  <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.3/dist/umd/popper.min.js"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/5.0.0-alpha2/js/bootstrap.min.js"></script>
  
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  
        <main class="main">
          <!-- Page Header -->
          <div class="container-fluid page-header py-5">
            <h1 class="text-center text-white display-6">Profile</h1>
            <ol class="breadcrumb justify-content-center mb-0">
              <li class="breadcrumb-item"><a href="/home">Home</a></li>
              <li class="breadcrumb-item active text-white">Profile</li>
            </ol>
          </div>
        
          <!-- Profile Section -->
          <section class="pt-10 pb-10">
            <div class="container">
              <div class="row">
                <div class="col-lg-10 m-auto">
                  <div class="row">
                    <!-- Sidebar Menu -->
                    <div class="col-md-4">
                      <div class="dashboard-menu" style="margin-top: 40px;">
                        <ul class="nav flex-column" role="tablist">
                          <li class="nav-item">
                            <a class="nav-link" data-bs-toggle="tab" href="#dashboard"role="tab">
                              <i class="fi-rs-shopping-bag mr-10"></i>User Profile
                            </a>
                          </li>
                          <li class="nav-item">
                            <a class="nav-link" data-bs-toggle="tab" href="#address"role="tab">
                              <i class="fi-rs-shopping-bag mr-10"></i>Address
                            </a>
                          </li>
  
                          <li class="nav-item">
                            <a class="nav-link active" data-bs-toggle="modal" data-bs-target="#changePasswordModal" >
                              <i class="fi-rs-marker mr-10"></i>Change Password
                            </a>
                          </li>
                         
                         
                            <!-- Other tabs -->
                            <li class="nav-item">
                              <a class="nav-link" data-bs-toggle="tab" href="#orders-history" role="tab">
                                <i class="fi-rs-shopping-cart-check mr-10"></i>Orders
                              </a>
                            </li>
                        
                          
                         
                          <li class="nav-item">
                            <a class="nav-link active" href="/getWishlist" role="tab">
                              <i class="fi-rs-settings-sliders mr-10"></i>Wishlist
                            </a>
                          </li>
                          <li class="nav-item">
                            <a class="nav-link active"  href="/wallet" role="tab">
                              
                              <i class="fi-rs-shopping-cart-check mr-10"></i>Wallet
                            </a>
                          </li>
                          
                          <li class="nav-item">
                            <a class="nav-link" href="javascript:void(0)" id="deleteaccount" onclick="handleDeleteAccount('<%=user._id%>','<%=user.name%>')">
                              <i class="fi-rs-shopping-cart-check mr-10"></i>Delete Account
                            </a>
                          </li>
                          <li class="nav-item">
                            <a class="nav-link" href="/logout">
                              <i class="fi-rs-sign-out mr-10"></i>Logout
                            </a>
                          </li>
                        </ul>
                      </div>
                    </div>
        
                    <!-- Main Content -->
                    <div class="col-md-8">
                      <div class="tab-content dashboard-content">
                        <!-- User Profile Tab -->
                        <div class="tab-pane fade show active" id="dashboard" role="tabpanel">
                          <div class="card card-green" id="userprofile"style="margin-top: 40px;">
                            <div class="card-header text-center "style="background-color:  #81C408">
                              <h5 class="mb-0">User Profile</h5>
                             </div>
                             <div class="card-body " style="margin-left: 40px;">
                             
                              <p id="username"> <Strong>Name: </Strong><%= user.name %></p>
                              <p id="userphone"><Strong>Phone:</Strong><%= user.phone %></p>
                              <p id="useremail"><Strong>Email:</Strong><%= user.email %></p>
                              <p id="referralCode"><Strong>Referral Code:</Strong><%= user.referralCode %></p>
                             </div>
                             <div class="text-center " style="margin-bottom: 30px;">
                              <button class="btn btn-primary w-70" onclick="openEditDetails('<%= user._id %>')">Edit</button>
      
                              </div>
                        </div>
                        </div>
                        <!-- Address Tab -->
                        
                        <div class="tab-pane fade" id="address" role="tabpanel">
                          <!-- <div class="row"> -->
                            <div class="card card-green" style="margin-top: 40px;margin-left:10px">
                              <div class="card-header text-center" >
                                <h5 class="mb-0">Address</h5>
                            <% if (!address || address.length === 0) { %>
                              <p>No addresses found. Please add one!</p>
                            <% } else { %>
                              <% address.forEach(address => { %>
                                <div class="col-lg-6">
                                  <div class="card mb-3">
                                    <div class="card-body">
                                      <address>
                                        <p><strong>Name:</strong> <%= address.name %></p>
                                        <p><strong>Landmark:</strong> <%= address.landmark %></p>
                                        <p><strong>District:</strong> <%= address.district %></p>
                                        <p><strong>State:</strong> <%= address.state %></p>
                                        <p><strong>Pincode:</strong> <%= address.pincode %></p>
                                        <p><strong>Phone:</strong> <%= address.phone %></p>
                                      </address>
                                      <div class="d-flex justify-content-between">
                                        <!-- Edit Button -->
                                        <button
                                          class="btn btn-primary w-30" onclick="openEditAddressModal('<%= address._id %>')">
                                          Edit
                                        </button>
                                        <!-- Delete Button -->
                                        <button  class="btn btn-danger btn-sm" onclick="deleteaddress('<%= address._id %>')">Delete</button>
                                        
                                      </div>
                                    </div>
                                  </div>
                                </div>
                                <% }) %>
                            <% } %>
                          </div>
                          <div>
                          <button class="btn btn-primary w-70" onclick="openAddAddressModal('<%= user._id %>')">Add Address</button>
  
                          </div>
                        </div>
                       </div>
                        <!-- Orders Tab -->
                     
  <div class="tab-pane fade" id="orders-history" role="tabpanel">
    <div class="card card-green" style="margin-top: 40px;">
      <div class="card-header text-center" style="background-color: #81C408">
        <h5 class="mb-0">Order History</h5>
      </div>
      <div class="card-body">
        <% if (orders && orders.length === 0) { %>
          <p class="text-center">No orders found.</p>
        <% } else { %>
          <table class="table">
            <thead>
              <tr>
                <th>Order ID</th>
                <th>Date</th>
                <th>Status</th>
                <th>Total</th>
                <th>Actions</th>
              </tr>
            </thead>
            <tbody>
              <% orders.forEach(order => { %>
                <tr>
                  <td><%= order.orderId %></td>
                  <td><%= order.createdOn.toLocaleDateString() %></td>
                  <td>
                    <% if (order.status.toLowerCase() === 'processing') { %>
                      <span style="color: yellowgreen;"><%= order.status %></span>
                    <% } else if (order.status.toLowerCase() === 'delivered') { %>
                      <span style="color: green;"><%= order.status %></span>
                    <% } else if (order.status.toLowerCase() === 'cancelled') { %>
                      <span style="color: red;"><%= order.status %></span>
                    <% } else if (order.status.toLowerCase() === 'shipped') { %>
                      <span style="color: yellow;"><%= order.status %></span>
                    <% } else { %>
                      <span><%= order.status %></span>
                    <% } %>
                  </td>
                  
                  <td>₹<%= order.finalAmount %></td>
                  
                  <td colspan="2">  <a href="/viewOrderDetails/<%= order._id %>" class="btn border border-secondary rounded-pill px-3 text-primary"> View More</a></td>
                </tr>
              <% }); %>
            </tbody>
          </table>
        <% } %>
      </div>
    </div>
  </div>
  
                      </div>
                    </div>
                    <!-- End Main Content -->
                  </div>
                </div>
              </div>
            </div>
          </section>
        </main>
   
   <!-- Change Password Modal -->
   <div class="modal fade" id="changePasswordModal" tabindex="-1" aria-labelledby="changePasswordModalLabel" aria-hidden="true"> 
    <div class="modal-dialog"> 
      <div class="modal-content"> 
        <div class="modal-header">
           <h5 class="modal-title" id="changePasswordModalLabel">Change Password</h5>
           <input type="text" class="form-control" id="userid" value=" <%= user._id %>" hidden> 
           <div class="text-danger text-center" id="passerror"></div>
            </div> 
           <div class="modal-body"> 
            <form id="changePasswordForm">
              <div class="mb-3">
                 <label for="oldPassword" class="form-label">Old Password</label>
                 
                 <input type="password" class="form-control" id="oldPassword" required> 
                </div> 
                <div class="mb-3"> 
                  <label for="newPassword" class="form-label">New Password</label>
             <input type="password" class="form-control" id="newPassword" required>
             </div>
              <div class="mb-3">
                 <label for="confirmPassword" class="form-label">Confirm Password</label>
                 <input type="password" class="form-control" id="confirmPassword" required> 
             </div>
             <div class="text-center mt-4">
              <button type="submit" class="btn btn-primary me-2">Change Password</button>
              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" aria-label="Close">Close</button>
            </div>
          </form>
        </div>
      </div>
     </div>
   </div>
  
  <!-- Modal for Add Address -->
  <!-- Add Address Modal -->
  <div class="modal fade" id="addressModal" tabindex="-1" aria-labelledby="addressModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="addressModalLabel">Add Address</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <form id="addressForm">
        <input type="hidden" id="userId" name="userId">
        <input type="hidden" id="addressId" name="addressId">
        <div class="text-danger text-center" id="addaddresserror"></div>
            <div class="mb-3">
              <label for="name" class="form-label">Name</label>
              <input type="text" class="form-control" id="name" placeholder="Enter name" >
            </div>
            <div class="mb-3">
              <label for="landmark" class="form-label">Landmark</label>
              <input type="text" class="form-control" id="landmark" placeholder="Enter landmark" >
            </div>
            <div class="mb-3">
              <label for="District" class="form-label">District</label>
              <input type="text" class="form-control" id="District" placeholder="Enter district">
            </div>
            <div class="mb-3">
              <label for="state" class="form-label">State</label>
              <input type="text" class="form-control" id="state" placeholder="Enter state" >
            </div>
            <div class="mb-3">
              <label for="pincode" class="form-label">Pincode</label>
              <input type="tel"  pattern="[0-9]{6}" class="form-control" id="pincode" placeholder="Enter pincode" >
            </div>
            <div class="mb-3">
              <label for="phone" class="form-label">Phone</label>
              <input type="text" class="form-control" id="phone" placeholder="Enter phone number" >
            </div>
            <button type="submit" class="btn btn-primary">Save Address</button>
          </form>
        </div>
      </div>
    </div>
  </div>
  
  <!-- edit -->
  <div class="modal fade" id="editaddressModal" tabindex="-1" aria-labelledby="editaddressModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="editaddressModalLabel">Edit Address</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <form id="editaddressForm">
            <input type="hidden" id="addressId1" name="addressId">
            <p id="editerrormessage"class="text-danger text-center"></p>
            <div class="mb-3">
              <label for="name" class="form-label">Name</label>
              <input type="text" class="form-control" id="name1" placeholder="Enter name" >
            </div>
            <div class="mb-3">
              <label for="landmark" class="form-label">Landmark</label>
              <input type="text" class="form-control" id="landmark1" placeholder="Enter landmark">
            </div>
            <div class="mb-3">
              <label for="district" class="form-label">District</label>
              <input type="text" class="form-control" id="district" placeholder="Enter district" >
            </div>
            <div class="mb-3">
              <label for="state" class="form-label">State</label>
              <input type="text" class="form-control" id="state1" placeholder="Enter state" >
            </div>
            <div class="mb-3">
              <label for="pincode" class="form-label">Pincode</label>
              <input type="tel" pattern="[0-9]{6}" class="form-control" id="pincode1" placeholder="Enter pincode" >
            </div>
            <div class="mb-3">
              <label for="phone" class="form-label">Phone</label>
              <input type="text" class="form-control" id="phone1" placeholder="Enter phone number" >
            </div>
            <button type="submit" class="btn btn-primary">Edit Address</button>
          </form>
        </div>
      </div>
    </div>
  </div>
  
  
   
  <div class="modal fade" id="editDetailModal" tabindex="-1" aria-labelledby="editDetailModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="editDetailModalLabel">Edit Details</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <form id="editDetailForm">
            <input type="hidden" id="profileid" name="userid">
     <div id="editdetailerrormessage" class="text-danger text-center"></div>
            <div class="mb-3">
              <label for="name" class="form-label">Name</label>
              <input type="text" class="form-control" id="profilename" placeholder="Enter name" >
            </div>
            
            <div class="mb-3">
              <label for="email" class="form-label">Email</label>
              <input type="email" class="form-control" id="profileemail" placeholder="Enter emailid" readonly >
            </div>
            <div class="mb-3">
              <label for="phone" class="form-label">Phone</label>
              <input type="tel" class="form-control" id="profilephone" placeholder="Enter phone number" >
            </div>
            <button type="submit" class="btn btn-primary">Update</button>
          </form>
        </div>
      </div>
    </div>
  </div>
  
  <!-- JavaScript Libraries -->
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.4/jquery.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/js/bootstrap.bundle.min.js"></script>
  
  
  <!-- Template Javascript -->
  
  
  
  <script>
  // Add this JavaScript to ensure proper tab switching
document.addEventListener('DOMContentLoaded', function() {
  const tabLinks = document.querySelectorAll('.dashboard-menu .nav-link[data-bs-toggle="tab"]');
  
  tabLinks.forEach(link => {
    link.addEventListener('click', function(e) {
      // Remove 'active' class from all tabs
      document.querySelectorAll('.dashboard-content .tab-pane').forEach(pane => {
        pane.classList.remove('show', 'active');
      });
      
      // Add 'active' class to the target tab
      const targetId = this.getAttribute('href');
      const targetPane = document.querySelector(targetId);
      if (targetPane) {
        targetPane.classList.add('show', 'active');
      }
    });
  });
});
     function handleDeleteAccount(userId,user) {
      //alert("dsfadsfasdf")
      //console.log("Inside delete:", userId);
  
      Swal.fire({
        title: 'Are you sure?',
        text: "You won't be able to revert this!",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#d33',
        cancelButtonColor: '#3085d6',
        confirmButtonText: 'Yes, Delete Account!'
      }).then((result) => {
        if (result.isConfirmed) {
          fetch(`/deleteAccount/${userId}`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({ _id: userId, name: user })
          })
          .then(response => {
            if (!response.ok) {
              throw new Error('Network response was not ok');
            }
            return response.json();
          })
          .then(data => {
            Swal.fire({
          title:    'Deleted!',
         text:     'Your account has been deleted.',
         icon:     'success'
           } );
            window.location.href = '/logout';
          })
          .catch(error => {
            console.error('Error:', error);
            Swal.fire(
              'Error!',
              'An error occurred while deleting your account.',
              'error'
            );
          });
        }
      });
    }
  
  
  
    function validatePassword(password) { 
      const alpha = /^(?=.*[A-Za-z])(?=.*\d)(?=.*[@$!&])[A-Za-z\d@$!&]{8,16}$/; 
      return alpha.test(password); 
    } 
    document.getElementById('changePasswordForm').addEventListener('submit', async function(event) {
    event.preventDefault();
  
    const oldPassword = document.getElementById('oldPassword').value;
    const newPassword = document.getElementById('newPassword').value;
    const confirmPassword = document.getElementById('confirmPassword').value;
    const userId = document.getElementById('userid').value.trim()
    
    
  
  
    if (!validatePassword(newPassword)) {
      document.getElementById('passerror').textContent='New password must be 8-16 characters long, include at least one letter, one number, and one special character (@$!&)'
     // alert('New password must be 8-16 characters long, include at least one letter, one number, and one special character (@$!&)');
      return;
    }
  
    if (newPassword !== confirmPassword) {
      document.getElementById('passerror').textContent='New Password and Confirm Password do not match'
      //alert('New Password and Confirm Password do not match');
      return;
    }
  
    const result = await Swal.fire({
      title: 'Are you sure?',
      text: "Your password will be changed!",
      icon: 'warning',
      showCancelButton: true,
      confirmButtonColor: '#d33',
      cancelButtonColor: '#3085d6',
      confirmButtonText: 'Yes, Change Password!'
    });
  
    if (result.isConfirmed) {
      try {
        
        const response = await fetch(`/changePassword/${userId}`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ userId, oldPassword, newPassword })
        });
  
        if (!response.ok) {
          throw new Error('Network response was not ok');
        }
  
        const data = await response.json();
  //alert("success")
  Swal.fire({
  title: 'Changed!',
  text: 'Your password is changed.',
  icon: 'success'
});
        window.location.href = `/userProfile/${userId}`;
  
      } catch (error) {
        console.error('Error:', error);
        Swal.fire(
          'Error!',
        "passwod mismatch",
          'error'
        );
      }
    }
  });
  
  
  
  
   // Open modal for adding address
  function openAddAddressModal(userId) {
      document.getElementById('addressForm').reset();
      const userIdInput = document.getElementById('userId');
     if (userIdInput) {
      userIdInput.value = userId; // Set the user ID in the hidden input
      console.log('User ID set in modal:', userId);
     } else {
      console.error('Hidden input for user ID not found.');
     }
   
      document.getElementById('addressModalLabel').textContent = 'Add Address';
      new bootstrap.Modal(document.getElementById('addressModal')).show();
     }
  
    
    // Submit form for Add
    document.getElementById('addressForm').addEventListener('submit', function (e) {
    e.preventDefault(); // Prevent form submission
    
    // Retrieve form values
   // alert("inssidsg")
    const name = document.getElementById('name').value.trim();
    const userId=document.getElementById('userId').value.trim()
  //alert(userId)
    console.log(name)
    const landmark = document.getElementById('landmark').value.trim();
    console.log(landmark)
    const district = document.getElementById('District').value.trim();
    console.log(district)
    const state = document.getElementById('state').value.trim();
    console.log(state)
    const pincode = document.getElementById('pincode').value.trim();
    console.log(pincode)
    const phone = document.getElementById('phone').value.trim();
    console.log(phone)
   
    
    // Validation
    const validIndianPattern = /^[6-9]\d{9}$/; // Validates Indian phone numbers
    const invalidPattern = /^(.)\1{9}$/; // Checks if all digits are the same
    
    if (!name || !landmark || !district || !state || !pincode || !phone) {
      document.getElementById('addaddresserror').textContent='Please fill all fields!';
      //alert('Please fill all fields!');
      return;
    }
    if (invalidPattern.test(phone)) {
      document.getElementById('addaddresserror').textContent='Phone number cannot be all the same digit.';
     // alert('Phone number cannot be all the same digit.');
      return;
    }
    if (!validIndianPattern.test(phone)) {
      document.getElementById('addaddresserror').textContent='Enter a valid Indian phone number.'
      //alert('Enter a valid Indian phone number.');
      return;
    }
  
    // Prepare API call details
  
    //alert("inside")
  
   // alert(userId,name,landmark,district,state,pincode,phone)
   
    // Make API call
    fetch('/addAddress', {
      method: 'POST',    // Change 'post' to 'POST' to match HTTP method names
      headers: {
          'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        Id:userId,
          name: name,
          landmark: landmark,
          district: district,
          state: state,
          pincode: pincode,
          phone: phone
      })
  })
  .then(response => response.json())
        .then(data => {
          Swal.fire(
            'Added!',
            'address added successfully.',
            'success'
          );
      window.location.reload(); // Reload page to reflect changes
  })
  .catch((err) => {
    Swal.fire(
            'Error!',
            'An error occurred while blocking user.',
            'error'
          );
  });
  });
  
  
  
  
  
    // Delete address
    function deleteaddress(addressId) {
     // alert(addressId)
      // if (confirm('Are you sure you want to delete this address?')) {
        Swal.fire({
        title: 'Are you sure?',
        text: "You won't be able to revert this!",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#d33',
        cancelButtonColor: '#3085d6',
        confirmButtonText: 'Yes, Delete Account!'
      }).then((result) => {
        if (result.isConfirmed) {
        fetch(`/deleteAddress/${addressId}`, {
          method: 'POST',
        })
          .then((res) => res.json())
          .then((data) => {
            Swal.fire(
              'Deleted!',
              'Your account has been deleted.',
              'success'
            );
           // alert(data.message);
            window.location.reload();
          })
          .catch((err) => {console.error(err)
          Swal.fire(
              'Error!',
              'An error occurred while deleting your account.',
              'error'
            );})
          }
      })
  
    }
  
  
  
  // Open modal for editing an address
  function openEditAddressModal(addressId) {
    //console.log(addressId,"edit addres modal")
     fetch(`/getAddress/${addressId}`,
     {method:'GET', 
     headers: {
            'Content-Type': 'application/json'
          },})
      .then((res) => res.json())
      .then((data) => {
      
        document.getElementById('addressId1').value = addressId;
        document.getElementById('name1').value=data.name;
        document.getElementById('landmark1').value = data.landmark;
        document.getElementById('district').value = data.district;
        document.getElementById('state1').value = data.state;
        document.getElementById('pincode1').value = data.pincode;
        document.getElementById('phone1').value = data.phone;
        new bootstrap.Modal(document.getElementById('editaddressModal')).show();
      })
      .catch((err) => console.error('Error fetching address:', err));
  }
  
  // Handle form submission
  document.getElementById('editaddressForm').addEventListener('submit', function (e) {
    e.preventDefault();
  
    // Get form data
   
    const addressId = document.getElementById('addressId1').value.trim();
    const name = document.getElementById('name1').value.trim();
    const landmark = document.getElementById('landmark1').value.trim();
    const district = document.getElementById('district').value.trim();
    const state = document.getElementById('state1').value.trim();
    const pincode = document.getElementById('pincode1').value.trim();
    const phone = document.getElementById('phone1').value.trim();
   
    // Validate inputs
    const validIndianPattern = /^[6-9]\d{9}$/;
    const invalidPattern = /^(.)\1{9}$/;
  
    if (!name || !landmark || !district || !state || !pincode || !phone) {
     document.getElementById("editerrormessage").textContent="Please fill all fields!"
     // alert('Please fill all fields!');
      return;
    }
    if (invalidPattern.test(phone)) {
       document.getElementById("editerrormessage").textContent="Phone number cannot be all the same digit"
     // alert('Phone number cannot be all the same digit');
      return;
    }
    if (!validIndianPattern.test(phone)) {
       document.getElementById("editerrormessage").textContent="Enter a valid Indian phone number"
     // alert('Enter a valid Indian phone number');
      return;
    }
  
  
  
    // Send API request
    fetch( `/updateAddress/${addressId}`, {
      method: 'POST', 
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
       
         name: name,
          landmark: landmark,
          district: district,
          state: state,
          pincode: pincode,
          phone: phone
      }),
    })
      .then((res) => res.json())
      .then((data) => {
        Swal.fire('Success!', 'Address updated successfully.', 'success');
        window.location.reload(); // Reload page to reflect changes
      })
      .catch((err) => {
        Swal.fire('Error!', 'An error occurred while saving the address.', 'error');
        console.error('Error saving address:', err);
      });
  });
  
  
  
  // On tab click
  document.querySelector('[href="#orders-history"]').addEventListener('click', async () => {
    try {
      const response = await fetch('/orders/api/history'); // API endpoint to fetch order history
      const orders = await response.json();
  
      const tableBody = document.querySelector('#orders-history tbody');
      tableBody.innerHTML = ''; // Clear existing rows
  
      if (orders.length === 0) {
        tableBody.innerHTML = '<tr><td colspan="5" class="text-center">No orders found.</td></tr>';
      } else {
        orders.forEach(order => {
          const row = `
            <tr>
              <td>${order._id}</td>
              <td>${new Date(order.createdOn).toLocaleDateString()}</td>
              <td>${order.status}</td>
              <td>$${order.finalAmount.toFixed(2)}</td>
              <td>
                ${order.status === 'Pending' ? `
                  <form action="/orders/cancel/${order._id}" method="POST">
                    <button class="btn btn-danger btn-sm">Cancel</button>
                  </form>` : 'N/A'}
              </td>
              <td></td>
            </tr>`;
          tableBody.innerHTML += row;
        });
      }
    } catch (err) {
      console.error('Error fetching order history:', err);
    }
  });
  
  
  
   function openEditDetails(userId) {
   // console.log(userId,"edit details modal")
   // alert(userId)
     fetch(`/getprofileDetail/${userId}`,
     {
      method:'GET', 
      headers: {
            'Content-Type': 'application/json'
              },})
      .then((res) => res.json())
      .then((data) => {
      //alert("dfdfdsfffffffffffffffffffff")
        // console.log("inside recieve",data)
       //  alert(data.phone)
         const num=data._id.toString()
       //  alert(num)
          document.getElementById('profileid').value=num
          document.getElementById('profilename').value=data.name
          document.getElementById('profilephone').value=data.phone
          document.getElementById('profileemail').value=data.email
           
        new bootstrap.Modal(document.getElementById('editDetailModal')).show();
      })
       .catch((err) => console.error('Error fetching details:', err));
  }
  
  // Handle form submission
    document.getElementById('editDetailForm').addEventListener('submit', function (e) {
    e.preventDefault();
    
    //console.log(document.getElementById('profilename').value)
    const username=document.getElementById('profilename').value
    const userphone = document.getElementById('profilephone').value
    const useremail = document.getElementById('profileemail').value
    const userId=document.getElementById('profileid').value
   // alert(userId)
  //console.log(userId,"this is id")
  
  
    // Get form data
   
    //const userId = document.getElementById('userid').value.trim();
    
   
    // Validate inputs
    const validIndianPattern = /^[6-9]\d{9}$/;
    const invalidPattern = /^(.)\1{9}$/;
    const emailReg = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;
    if (!username || !userphone || !useremail) {
      document.getElementById("editdetailerrormessage").textContent='Please fill all fields!'
      //alert('Please fill all fields!');
      return false;
    }
    if (invalidPattern.test(userphone)) {
      document.getElementById("editdetailerrormessage").textContent='Phone number cannot be all the same digit.'
      //alert('Phone number cannot be all the same digit.');
      return false;
    }
    if (!validIndianPattern.test(userphone)) {
      document.getElementById("editdetailerrormessage").textContent='Enter a valid Indian phone number.'
      //alert('Enter a valid Indian phone number.');
      return false;
    }
    if(! emailReg.test(useremail) ){
      document.getElementById("editdetailerrormessage").textContent='Enter a valid emailId'
      //alert('Enter a valid emailId');
      return false;
        }
  if(profilename="")
  {document.getElementById("editdetailerrormessage").textContent='Please enter name'
    //alert("Please enter name")
    return false;
  }
  
  else{
    // Send API request
    fetch( `/updateDetail/${userId}`, {
      method: 'POST', 
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
       
         name: username,
          email: useremail,
          phone: userphone,
          
      }),
    })
      .then((res) => res.json())
      .then((data) => {
        Swal.fire('Success!', 'Details updated successfully.', 'success')
       
      window.location.reload(); // Reload page to reflect changes
     
    
      })
      .catch((err) => {
        Swal.fire('Error!', 'An error occurred while saving the Details.', 'error');
        console.error('Error saving address:', err);
      });
    }
  });
  
  
  
  
  
  
  </script>
  
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.0/jquery.min.js"></script>
  <%- include("../../views/partials/user/footer") %>
  </body>
  
  </html>